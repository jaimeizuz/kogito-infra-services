quarkus.application.name=kogito-bpmn-elements-playground

############
# Services #
############

# These properties are residual from Distributed Architecture, where Data-Index, Data-Audit,
# and Jobs Service are external to the Kogito Runtime application.
# They are still necessary, but won't be anymore in future releases.
kogito.service.url=http://localhost:${quarkus.http.port}
kogito.jobs-service.url=http://localhost:${quarkus.http.port}
kogito.data-index.url=http://localhost:${quarkus.http.port}

###############
# Development #
###############

# Swagger Dev UI configuration.
# More at https://quarkus.io/guides/openapi-swaggerui

quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.dev-ui.cors.enabled=false
quarkus.smallrye-openapi.path=/docs/openapi.json
quarkus.http.test-port=0
quarkus.swagger-ui.always-include=true
quarkus.kogito.data-index.graphql.ui.always-include=true

# Development tasks users
%dev.jbpm.devui.users.jdoe.groups=admin,HR,IT

####################
# Containerization #
####################

# Profile to pack this example into a container image.
# To use it run a Maven build with the `container` profile (-Pcontainer)

%container.quarkus.container-image.build=true
%container.quarkus.container-image.push=false
%container.quarkus.container-image.group=kogito
%container.quarkus.container-image.registry=dev.local
%container.quarkus.container-image.tag=1.0.0-SNAPSHOT
%container.quarkus.container-image.name=kogito-bpmn-elements-playground

###############
# Persistence #
###############

# Apache KIE provides a separate Flyway subsystem that allows Kogito's internal tables to be created and migrated
# without interfering with your application's Flyway, if you're using it.
#
# This property enables running this isolated Flyway mechanism automatically when the application starts.
# If you want more control over when/how/who executes changes to your database, disable it and run the SQL scripts manually.
%dev.kie.flyway.enabled=true

# Tells the Kogito runtime what kind of persistence is configured.
kogito.persistence.type=jdbc
kogito.persistence.proto.marshaller=false

kogito.generate.rest.processes=true
kogito.transactionEnabled=true

%dev.quarkus.embedded.postgresql.port=5532
%dev.quarkus.embedded.postgresql.data.dir=embedded-postgres-data

quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.username=postgres
%dev.quarkus.datasource.password=postgres
%dev.quarkus.datasource.jdbc.url=${QUARKUS_DATASOURCE_JDBC_URL:jdbc:postgresql://localhost:5532/postgres?currentSchema=kogito}

%dev.quarkus.wiremock.devservices.enabled=true
%dev.quarkus.wiremock.devservices.files-mapping=src/main/resources/wiremock/dummy
%dev.quarkus.wiremock.devservices.port=9002
%dev.quarkus.wiremock.devservices.reload=true
%dev.quarkus.rest-client."dummy-rest-service".url=http://localhost:${%dev.quarkus.wiremock.devservices.port}

################
# Jobs Service #
################
mp.openapi.filter=org.kie.kogito.jobs.service.openapi.JobServiceModelFilter
quarkus.smallrye-health.check."org.kie.kogito.jobs.service.management.JobServiceLeaderLivenessHealthCheck".enabled=false

# Maximum amount of time the jobs service will be retrying to get a successful execution for a job.
kogito.jobs-service.maxIntervalLimitToRetryMillis=60000

# Delay between retries when a job execution fails, and it must be retried.
kogito.jobs-service.backoffRetryMillis=1000

# The current chunk size in minutes the scheduler handles, it is used to keep a limit number of jobs scheduled in the in-memory scheduler.
kogito.jobs-service.schedulerChunkInMinutes=5

# The interval the job loading method runs to fetch the persisted jobs from the repository.
kogito.jobs-service.loadJobIntervalInMinutes=10

# The interval based on the current time the job loading method uses to fetch jobs "FROM (now - {@link #loadJobFromCurrentTimeIntervalInMinutes}) TO {@link #schedulerChunkInMinutes}"
kogito.jobs-service.loadJobFromCurrentTimeIntervalInMinutes=60

# Number of retries configured for the periodic jobs loading procedure. Every time the procedure is started this value is considered.
kogito.jobs-service.loadJobRetries=3

# Flag to allow and force a job with expirationTime in the past to be executed immediately. If false an exception will be thrown.
kogito.jobs-service.forceExecuteExpiredJobs=true

# Flag to allow that jobs that might have overdue during an eventual service shutdown should be fired at the next service start.
kogito.jobs-service.forceExecuteExpiredJobsOnServiceStart=true

# Error strategy to apply when the periodic jobs loading procedure has exceeded the jobLoadReties (NONE or FAIL_SERVICE).
kogito.jobs-service.loadJobErrorStrateg=NONE

#quarkus.kafka.devservices.enabled=true
#kafka.bootstrap.servers=localhost:9092
#quarkus.kafka.devservices.port=9092

#%dev.mp.messaging.outgoing.kogito-processdefinitions-events.bootstrap.servers=192.168.8.200:9092
#mp.messaging.outgoing.kogito-processdefinitions-events.connector=smallrye-kafka
#mp.messaging.outgoing.kogito-processdefinitions-events.topic=kogito-processdefinitions-events
#mp.messaging.outgoing.kogito-processdefinitions-events.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

#%dev.mp.messaging.outgoing.kogito-processinstances-events.bootstrap.servers=192.168.8.200:9092
#mp.messaging.outgoing.kogito-processinstances-events.connector=smallrye-kafka
#mp.messaging.outgoing.kogito-processinstances-events.topic=kogito-processinstances-events
#mp.messaging.outgoing.kogito-processinstances-events.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

#%dev.mp.messaging.outgoing.kogito-usertaskinstances-events.bootstrap.servers=192.168.8.200:9092
#mp.messaging.outgoing.kogito-usertaskinstances-events.connector=smallrye-kafka
#mp.messaging.outgoing.kogito-usertaskinstances-events.topic=kogito-usertaskinstances-events
#mp.messaging.outgoing.kogito-usertaskinstances-events.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer


%dev.quarkus.log.category."org.kie.kogito.jobs.service.scheduler.impl.TimerDelegateJobScheduler".level=WARN
%dev.quarkus.log.category."org.kie.kogito.quarkus.processes.devservices.DevModeWorkflowLogger".level=WARN
%dev.quarkus.log.category."org.kie.kogito.jobs.embedded.JobInVMEventPublisher".level=WARN
%dev.quarkus.log.category."org.kie.kogito.usertask.lifecycle.impl.ReassignmentUserTaskLifecycle".level=DEBUG
%dev.quarkus.log.category."org.kie.kogito.jobs.service.scheduler.BaseTimerJobScheduler".level=WARN
%dev.quarkus.log.category."org.kie.kogito.jobs.service.job.DelegateJob".level=WARN
%dev.quarkus.log.category."org.kie.kogito.jobs.embedded.EmbeddedJobsService".level=DEBUG
%dev.quarkus.log.category."org.kie.kogito.usertask.impl.model".level=DEBUG