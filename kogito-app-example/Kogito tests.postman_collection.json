{
	"info": {
		"_postman_id": "84a562bb-b30f-4b92-87ba-39171d659c24",
		"name": "Kogito tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28218587"
	},
	"item": [
		{
			"name": "Kogito Management Console",
			"item": [
				{
					"name": "Process Definitions",
					"item": [
						{
							"name": "Get Process Definitions",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"operationName\": \"getProcessDefinitions\",\r\n    \"variables\": {},\r\n    \"query\": \"query getProcessDefinitions {\\n  ProcessDefinitions {\\n    id\\n    endpoint\\n    __typename\\n  }\\n}\\n\"\r\n}"
								},
								"url": {
									"raw": "{{bamoe-localhost}}/graphql",
									"host": [
										"{{bamoe-localhost}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Process Definition Nodes",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"operationName\": \"getProcessDefinitionNodes\",\r\n    \"variables\": {\r\n        \"processId\": \"{{process-definition-id}}\"\r\n    },\r\n    \"query\": \"query getProcessDefinitionNodes($processId: String) {\\n  ProcessDefinitions(where: {id: {equal: $processId}}) {\\n    nodes {\\n      id\\n      name\\n      type\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"\r\n}"
								},
								"url": {
									"raw": "{{bamoe-localhost}}/graphql",
									"host": [
										"{{bamoe-localhost}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Start Process Instance",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"expirationTime\": \"PT300S\"\r\n}"
								},
								"url": {
									"raw": "{{bamoe-localhost}}/UserTasksProcess",
									"host": [
										"{{bamoe-localhost}}"
									],
									"path": [
										"UserTasksProcess"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Process Instances",
					"item": [
						{
							"name": "User Tasks",
							"item": [
								{
									"name": "Get Tasks For User",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "default"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"operationName\": \"getTasksForUser\",\r\n    \"variables\": {\r\n        \"whereArgument\": {\r\n            \"and\": [\r\n                {},\r\n                {\r\n                    \"and\": [\r\n                        {\r\n                            \"state\": {\r\n                                \"in\": [\r\n                                    \"Ready\",\r\n                                    \"Reserved\"\r\n                                ]\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"offset\": 0,\r\n        \"limit\": 10,\r\n        \"orderBy\": {\r\n            \"lastUpdate\": \"DESC\"\r\n        }\r\n    },\r\n    \"query\": \"query getTasksForUser($whereArgument: UserTaskInstanceArgument, $offset: Int, $limit: Int, $orderBy: UserTaskInstanceOrderBy) {\\n  UserTaskInstances(where: $whereArgument, pagination: {offset: $offset, limit: $limit}, orderBy: $orderBy) {\\n    id\\n    name\\n    referenceName\\n    description\\n    priority\\n    processInstanceId\\n    processId\\n    rootProcessInstanceId\\n    rootProcessId\\n    state\\n    actualOwner\\n    adminGroups\\n    adminUsers\\n    completed\\n    started\\n    excludedUsers\\n    potentialGroups\\n    potentialUsers\\n    inputs\\n    outputs\\n    lastUpdate\\n    endpoint\\n    externalReferenceId\\n    __typename\\n  }\\n}\\n\"\r\n}"
										},
										"url": {
											"raw": "{{bamoe-localhost}}/graphql",
											"host": [
												"{{bamoe-localhost}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get Process Instances",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"process-instance-id\", pm.response.json().data.ProcessInstances[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"operationName\": \"getProcessInstances\",\r\n    \"variables\": {\r\n        \"where\": {\r\n            \"parentProcessInstanceId\": {\r\n                \"isNull\": true\r\n            },\r\n            \"state\": {\r\n                \"in\": [\r\n                    \"ACTIVE\"\r\n                ]\r\n            }\r\n        },\r\n        \"offset\": 0,\r\n        \"limit\": 10,\r\n        \"orderBy\": {\r\n            \"lastUpdate\": \"DESC\"\r\n        }\r\n    },\r\n    \"query\": \"query getProcessInstances($where: ProcessInstanceArgument, $offset: Int, $limit: Int, $orderBy: ProcessInstanceOrderBy) {\\n  ProcessInstances(where: $where, pagination: {offset: $offset, limit: $limit}, orderBy: $orderBy) {\\n    id\\n    processId\\n    processName\\n    parentProcessInstanceId\\n    rootProcessInstanceId\\n    roles\\n    state\\n    start\\n    lastUpdate\\n    addons\\n    businessKey\\n    serviceUrl\\n    error {\\n      nodeDefinitionId\\n      message\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"\r\n}"
								},
								"url": {
									"raw": "{{bamoe-localhost}}/graphql",
									"host": [
										"{{bamoe-localhost}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Process Instance Info",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"operationName\": \"getProcessInstanceById\",\r\n    \"variables\": {\r\n        \"id\": \"{{process-instance-id}}\"\r\n    },\r\n    \"query\": \"query getProcessInstanceById($id: String) {\\n  ProcessInstances(where: {id: {equal: $id}}) {\\n    id\\n    processId\\n    processName\\n    businessKey\\n    parentProcessInstanceId\\n    parentProcessInstance {\\n      id\\n      processName\\n      businessKey\\n      __typename\\n    }\\n    roles\\n    variables\\n    state\\n    start\\n    lastUpdate\\n    end\\n    addons\\n    endpoint\\n    addons\\n    serviceUrl\\n    source\\n    error {\\n      nodeDefinitionId\\n      message\\n      __typename\\n    }\\n    childProcessInstances {\\n      id\\n      processName\\n      businessKey\\n      __typename\\n    }\\n    nodes {\\n      id\\n      nodeId\\n      name\\n      enter\\n      exit\\n      type\\n      definitionId\\n      __typename\\n    }\\n    milestones {\\n      id\\n      name\\n      status\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"\r\n}"
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/graphql",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Process Instance Image",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var template = \"<img src='data:image/svg+xml;base64,{{response}}' />\";\r",
											"\r",
											"// Set visualizer\r",
											"pm.visualizer.set(template, {\r",
											"    // Pass the response body parsed as JSON as `data`\r",
											"    response: \r",
											"       btoa(pm.response.json().data.ProcessInstances[0].diagram\r",
											"            //.replaceAll(\"\\\\\\\"\", \"\\\"\")\r",
											"            .replaceAll(\"xmlns=\\\"\\\"\", \"\")\r",
											"            .replaceAll(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\", \"\"))\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "image/svg+xml",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"operationName\": \"getProcessInstanceSVG\",\r\n    \"variables\": {\r\n        \"processId\": \"{{process-instance-id}}\"\r\n    },\r\n    \"query\": \"query getProcessInstanceSVG($processId: String) {\\n  ProcessInstances(where: {id: {equal: $processId}}) {\\n    diagram\\n  }\\n}\\n\"\r\n}"
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/graphql",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Jobs",
					"item": [
						{
							"name": "Get Jobs by Filters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"job-id\", pm.response.json().data.Jobs[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"operationName\": \"getJobsWithFilters\",\r\n    \"variables\": {\r\n        \"values\": [\r\n            \"SCHEDULED\"\r\n        ],\r\n        \"offset\": 0,\r\n        \"limit\": 10,\r\n        \"orderBy\": {\r\n            \"lastUpdate\": \"DESC\"\r\n        }\r\n    },\r\n    \"query\": \"query getJobsWithFilters($values: [JobStatus], $orderBy: JobOrderBy, $offset: Int, $limit: Int) {\\n  Jobs(where: {status: {in: $values}}, orderBy: $orderBy, pagination: {offset: $offset, limit: $limit}) {\\n    id\\n    processId\\n    processInstanceId\\n    rootProcessId\\n    status\\n    expirationTime\\n    priority\\n    callbackEndpoint\\n    repeatInterval\\n    repeatLimit\\n    scheduledId\\n    retries\\n    lastUpdate\\n    endpoint\\n    executionCounter\\n    __typename\\n  }\\n}\\n\"\r\n}"
								},
								"url": {
									"raw": "{{bamoe-localhost}}/graphql",
									"host": [
										"{{bamoe-localhost}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Jobs by Process Instance Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"job-id\", pm.response.json().data.Jobs[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"operationName\": \"getJobsByProcessInstanceId\",\r\n    \"variables\": {\r\n        \"processInstanceId\": \"{{process-instance-id}}\"\r\n    },\r\n    \"query\": \"query getJobsByProcessInstanceId($processInstanceId: String) {\\n  Jobs(where: {processInstanceId: {equal: $processInstanceId}}) {\\n    id\\n    processId\\n    processInstanceId\\n    rootProcessId\\n    status\\n    expirationTime\\n    priority\\n    callbackEndpoint\\n    repeatInterval\\n    repeatLimit\\n    scheduledId\\n    retries\\n    lastUpdate\\n    endpoint\\n    nodeInstanceId\\n    executionCounter\\n    __typename\\n  }\\n}\\n\"\r\n}"
								},
								"url": {
									"raw": "{{bamoe-localhost}}/graphql",
									"host": [
										"{{bamoe-localhost}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reschedule Job",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"operationName\": \"handleJobReschedule\",\r\n    \"variables\": {\r\n        \"jobId\": \"{{job-id}}\",\r\n        \"data\": \"{\\\"expirationTime\\\":\\\"2025-02-13T16:17:00.000Z\\\",\\\"repeatInterval\\\":0,\\\"repeatLimit\\\":0}\"\r\n    },\r\n    \"query\": \"mutation handleJobReschedule($jobId: String, $data: String) {\\n  JobReschedule(id: $jobId, data: $data)\\n}\\n\"\r\n}"
								},
								"url": {
									"raw": "{{bamoe-localhost}}/graphql",
									"host": [
										"{{bamoe-localhost}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel Job",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "default"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"operationName\": \"jobCancel\",\r\n    \"variables\": {\r\n        \"jobId\": \"{{job-id}}\"\r\n    },\r\n    \"query\": \"mutation jobCancel($jobId: String) {\\n  JobCancel(id: $jobId)\\n}\\n\"\r\n}"
								},
								"url": {
									"raw": "{{bamoe-localhost}}/graphql",
									"host": [
										"{{bamoe-localhost}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Kogito Runtime",
			"item": [
				{
					"name": "Processes",
					"item": [
						{
							"name": "Start Hiring Process Instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"process-instance-id\", JSON.parse(pm.response.text())[\"id\"]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-kogito-correlationkey",
										"value": "12345",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"candidateData\": {\r\n    \"name\": \"Jon\",\r\n    \"lastName\": \"Snow\",\r\n    \"email\": \"jon@snow.org\",\r\n    \"experience\": 5,\r\n    \"skills\": [\"Java\", \"Kogito\", \"Fencing\"]\r\n  },\r\n  \"expirationTime\" : \"PT120S\",\r\n  \"throwException\" : false,\r\n  \"workitemType\" : \"WIH\",\r\n  \"errorStrategy\" : \"RETHROW\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/hiring",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"hiring"
									]
								}
							},
							"response": []
						},
						{
							"name": "Start Travel Agency Process Instance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"process-instance-id\", JSON.parse(pm.response.text())[\"id\"]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-kogito-correlationkey",
										"value": "12345",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"traveller\" : {\r\n    \"firstName\" : \"Jan\",\r\n    \"lastName\" : \"Kowalski\",\r\n    \"email\" : \"jan.kowalski@example.com\",\r\n    \"nationality\" : \"Polish\",\r\n    \"address\" : {\r\n      \"street\" : \"polna\",\r\n      \"city\" : \"Krakow\",\r\n      \"zipCode\" : \"32000\",\r\n      \"country\" : \"Poland\"\r\n    }\r\n  },\r\n  \"trip\" : {\r\n    \"city\" : \"New York\",\r\n    \"country\" : \"US\",\r\n    \"begin\" : \"2019-12-10T00:00:00.000+02:00\",\r\n    \"end\" : \"2019-12-15T00:00:00.000+02:00\"\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/travels",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"travels"
									]
								}
							},
							"response": []
						},
						{
							"name": "Healthcheck",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"process-instance-id\", JSON.parse(pm.response.text())[\"id\"]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"candidateData\": {\r\n    \"name\": \"Jon\",\r\n    \"lastName\": \"Snow\",\r\n    \"email\": \"jon@snow.org\",\r\n    \"experience\": 5,\r\n    \"skills\": [\"Java\", \"Kogito\", \"Fencing\"]\r\n  },\r\n  \"expirationTime\" : \"PT30S\",\r\n  \"throwException\" : false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/q/health/ready",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"q",
										"health",
										"ready"
									]
								}
							},
							"response": []
						},
						{
							"name": "Put Variable",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"countryId\" : 12\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/{{kogito-service-process-id}}/{{process-instance-id}}",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"{{kogito-service-process-id}}",
										"{{process-instance-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update process variable",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"process-instance-id\", JSON.parse(pm.response.text())[\"id\"]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"countryId\" : 87\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/{{kogito-service-process-id}}/{{process-instance-id}}",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"{{kogito-service-process-id}}",
										"{{process-instance-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Process Source",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/management/processes/{{kogito-service-process-id}}/source",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"management",
										"processes",
										"{{kogito-service-process-id}}",
										"source"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "User Tasks",
					"item": [
						{
							"name": "Signal Cancel HT Interview",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/hiring/instances/{{process-instance-id}}/signals/cancelHrInterview",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"hiring",
										"instances",
										"{{process-instance-id}}",
										"signals",
										"cancelHrInterview"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get user tasks (GENERIC)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"task-instance-name\", JSON.parse(pm.response.text()).pop()[\"taskName\"]);\r",
											"pm.collectionVariables.set(\"task-instance-id\", JSON.parse(pm.response.text()).pop()[\"id\"]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/usertasks/instance?user=jdoe",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"usertasks",
										"instance"
									],
									"query": [
										{
											"key": "user",
											"value": "jdoe"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User Task Info (GENERIC)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/usertasks/instance/{{task-instance-id}}?user=jdoe",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"usertasks",
										"instance",
										"{{task-instance-id}}"
									],
									"query": [
										{
											"key": "user",
											"value": "jdoe"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get user tasks by process instance id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"task-instance-name\", JSON.parse(pm.response.text())[0][\"name\"]);\r",
											"pm.collectionVariables.set(\"task-instance-id\", JSON.parse(pm.response.text())[0][\"id\"]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/{{kogito-service-process-id}}/{{process-instance-id}}/tasks?user=jdoe",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"{{kogito-service-process-id}}",
										"{{process-instance-id}}",
										"tasks"
									],
									"query": [
										{
											"key": "user",
											"value": "jdoe"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Claim (GENERIC)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"transitionId\" : \"claim\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/usertasks/instance/{{task-instance-id}}/transition?user={{user-id}}",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"usertasks",
										"instance",
										"{{task-instance-id}}",
										"transition"
									],
									"query": [
										{
											"key": "user",
											"value": "{{user-id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Release (GENERIC)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"transitionId\" : \"release\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/usertasks/instance/{{task-instance-id}}/transition?user={{user-id}}",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"usertasks",
										"instance",
										"{{task-instance-id}}",
										"transition"
									],
									"query": [
										{
											"key": "user",
											"value": "{{user-id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Start (GENERIC)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"transitionId\" : \"start\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/usertasks/instance/{{task-instance-id}}/transition?user={{user-id}}",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"usertasks",
										"instance",
										"{{task-instance-id}}",
										"transition"
									],
									"query": [
										{
											"key": "user",
											"value": "{{user-id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Pause (GENERIC)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"transitionId\" : \"pause\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/usertasks/instance/{{task-instance-id}}/transition?user={{user-id}}",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"usertasks",
										"instance",
										"{{task-instance-id}}",
										"transition"
									],
									"query": [
										{
											"key": "user",
											"value": "{{user-id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Resume (GENERIC)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"transitionId\" : \"resume\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/usertasks/instance/{{task-instance-id}}/transition?user={{user-id}}",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"usertasks",
										"instance",
										"{{task-instance-id}}",
										"transition"
									],
									"query": [
										{
											"key": "user",
											"value": "{{user-id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Complete (GENERIC)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"transitionId\" : \"complete\",\r\n    \"data\" : {\r\n        \"approve\" : false,\r\n        \"offer\": {\r\n            \"category\": \"Senior Software Engineer\",\r\n            \"salary\": 40450\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/usertasks/instance/{{task-instance-id}}/transition?user={{user-id}}",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"usertasks",
										"instance",
										"{{task-instance-id}}",
										"transition"
									],
									"query": [
										{
											"key": "user",
											"value": "{{user-id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Start user task",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"validData\" : false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/{{kogito-service-process-id}}/{{process-instance-id}}/{{task-instance-name}}/{{task-instance-id}}?phase=start&user={{user-id}}",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"{{kogito-service-process-id}}",
										"{{process-instance-id}}",
										"{{task-instance-name}}",
										"{{task-instance-id}}"
									],
									"query": [
										{
											"key": "phase",
											"value": "start"
										},
										{
											"key": "user",
											"value": "{{user-id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Claim",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"validData\" : false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/{{kogito-service-process-id}}/{{process-instance-id}}/{{task-instance-name}}/{{task-instance-id}}?phase=claim&user={{user-id}}",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"{{kogito-service-process-id}}",
										"{{process-instance-id}}",
										"{{task-instance-name}}",
										"{{task-instance-id}}"
									],
									"query": [
										{
											"key": "phase",
											"value": "claim"
										},
										{
											"key": "user",
											"value": "{{user-id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Complete User Task",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"validData\" : false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/{{kogito-service-process-id}}/{{process-instance-id}}/{{task-instance-name}}/{{task-instance-id}}?phase=complete&user={{user-id}}",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"{{kogito-service-process-id}}",
										"{{process-instance-id}}",
										"{{task-instance-name}}",
										"{{task-instance-id}}"
									],
									"query": [
										{
											"key": "phase",
											"value": "complete"
										},
										{
											"key": "user",
											"value": "{{user-id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Pause user task (back to reserved)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"validData\" : false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/{{kogito-service-process-id}}/{{process-instance-id}}/{{task-instance-name}}/{{task-instance-id}}?phase=start&user={{user-id}}",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"{{kogito-service-process-id}}",
										"{{process-instance-id}}",
										"{{task-instance-name}}",
										"{{task-instance-id}}"
									],
									"query": [
										{
											"key": "phase",
											"value": "start"
										},
										{
											"key": "user",
											"value": "{{user-id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Pause user task (custom state)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"validData\" : false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/{{kogito-service-process-id}}/{{process-instance-id}}/{{task-instance-name}}/{{task-instance-id}}?phase=start&user={{user-id}}",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"{{kogito-service-process-id}}",
										"{{process-instance-id}}",
										"{{task-instance-name}}",
										"{{task-instance-id}}"
									],
									"query": [
										{
											"key": "phase",
											"value": "start"
										},
										{
											"key": "user",
											"value": "{{user-id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Save Task Outputs",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"validCountries\" : true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/{{kogito-service-process-id}}/{{process-instance-id}}/{{task-instance-name}}/{{task-instance-id}}?user=jdoe",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"{{kogito-service-process-id}}",
										"{{process-instance-id}}",
										"{{task-instance-name}}",
										"{{task-instance-id}}"
									],
									"query": [
										{
											"key": "user",
											"value": "jdoe"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Process Management",
					"item": [
						{
							"name": "Retry Process Instance",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/management/processes/{{kogito-service-process-id}}/instances/{{process-instance-id}}/retrigger",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"management",
										"processes",
										"{{kogito-service-process-id}}",
										"instances",
										"{{process-instance-id}}",
										"retrigger"
									]
								}
							},
							"response": []
						},
						{
							"name": "Skip Process Instance",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/management/processes/{{kogito-service-process-id}}/instances/{{process-instance-id}}/skip",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"management",
										"processes",
										"{{kogito-service-process-id}}",
										"instances",
										"{{process-instance-id}}",
										"skip"
									]
								}
							},
							"response": []
						},
						{
							"name": "Migrate Process Version",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"targetProcessId\": \"SampleProcess\",\r\n  \"targetProcessVersion\": \"2.0\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/management/processes/{{kogito-service-process-id}}/migrate",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"management",
										"processes",
										"{{kogito-service-process-id}}",
										"migrate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Migrate Process Instance Version",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"targetProcessId\": \"ServiceTaskProcess\",\r\n  \"targetProcessVersion\": \"2.0\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/management/processes/{{kogito-service-process-id}}/instances/{{process-instance-id}}/migrate",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"management",
										"processes",
										"{{kogito-service-process-id}}",
										"instances",
										"{{process-instance-id}}",
										"migrate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Process Instance Diagram",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/svg/processes/{{kogito-service-process-id}}/instances/{{process-instance-id}}",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"svg",
										"processes",
										"{{kogito-service-process-id}}",
										"instances",
										"{{process-instance-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Process Definition Diagram",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/svg/processes/{{kogito-service-process-id}}",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"svg",
										"processes",
										"{{kogito-service-process-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Nodes",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-service-host}}:{{kogito-service-port}}/management/processes/{{kogito-service-process-id}}/nodes",
									"host": [
										"{{kogito-service-host}}"
									],
									"port": "{{kogito-service-port}}",
									"path": [
										"management",
										"processes",
										"{{kogito-service-process-id}}",
										"nodes"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "List loggers",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{kogito-service-host}}:{{kogito-service-port}}/q/logging-manager",
							"host": [
								"{{kogito-service-host}}"
							],
							"port": "{{kogito-service-port}}",
							"path": [
								"q",
								"logging-manager"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get logger",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{kogito-service-host}}:{{kogito-service-port}}/q/logging-manager?loggerName=org.kie.kogito.jobs.service",
							"host": [
								"{{kogito-service-host}}"
							],
							"port": "{{kogito-service-port}}",
							"path": [
								"q",
								"logging-manager"
							],
							"query": [
								{
									"key": "loggerName",
									"value": "org.kie.kogito.jobs.service"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change logger",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "loggerLevel",
									"value": "DEBUG",
									"type": "text"
								},
								{
									"key": "loggerName",
									"value": "org.jbpm.process.instance.context.exception",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{kogito-service-host}}:{{kogito-service-port}}/q/logging-manager",
							"host": [
								"{{kogito-service-host}}"
							],
							"port": "{{kogito-service-port}}",
							"path": [
								"q",
								"logging-manager"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Kogito Data-Index",
			"item": [
				{
					"name": "Process Instances",
					"item": [
						{
							"name": "List all Process Instances",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var tempQuery = encodeURIComponent(pm.collectionVariables.get(\"query-get-all-process-instances\"));\r",
											"pm.request.url.query.insert({key:\"query\",value: tempQuery});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-data-index-host}}:{{kogito-data-index-port}}/graphql",
									"host": [
										"{{kogito-data-index-host}}"
									],
									"port": "{{kogito-data-index-port}}",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Process Instance by Instance Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var tempQuery = pm.collectionVariables.get(\"query-get-process-instance-by-instance-id\");\r",
											"tempQuery = encodeURIComponent(tempQuery.replace(\"process-instance-id\",pm.collectionVariables.get(\"process-instance-id\")));\r",
											"console.log(tempQuery);\r",
											"pm.request.url.query.insert({key:\"query\",value: tempQuery});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-data-index-host}}:{{kogito-data-index-port}}/graphql",
									"host": [
										"{{kogito-data-index-host}}"
									],
									"port": "{{kogito-data-index-port}}",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Process Instances by Process Id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var tempQuery = pm.collectionVariables.get(\"query-get-process-instances-by-process-id-and-date\");\r",
											"console.log(tempQuery);\r",
											"tempQuery = encodeURIComponent(tempQuery.replace(\"kogito-service-process-id\",pm.collectionVariables.get(\"kogito-service-process-id\")));\r",
											"console.log(tempQuery);\r",
											"pm.request.url.query.insert({key:\"query\",value: tempQuery});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-data-index-host}}:{{kogito-data-index-port}}/graphql",
									"host": [
										"{{kogito-data-index-host}}"
									],
									"port": "{{kogito-data-index-port}}",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Jobs",
					"item": []
				},
				{
					"name": "User Tasks",
					"item": [
						{
							"name": "List User Tasks by Process Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//pm.collectionVariables.set(\"task-instance-id\", JSON.parse(pm.response.text())[\"id\"]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var tempQuery = pm.collectionVariables.get(\"query-get-user-tasks-by-process-id\");\r",
											"tempQuery = encodeURIComponent(tempQuery.replace(\"kogito-service-process-id\",pm.collectionVariables.get(\"kogito-service-process-id\")));\r",
											"console.log(tempQuery);\r",
											"pm.request.url.query.insert({key:\"query\",value: tempQuery});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-data-index-host}}:{{kogito-data-index-port}}/graphql",
									"host": [
										"{{kogito-data-index-host}}"
									],
									"port": "{{kogito-data-index-port}}",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "List User Tasks by Process Instance Id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var tempQuery = pm.collectionVariables.get(\"query-get-user-tasks-by-process-instance-id\");\r",
											"tempQuery = encodeURIComponent(tempQuery.replace(\"process-instance-id\",pm.collectionVariables.get(\"process-instance-id\")));\r",
											"console.log(tempQuery);\r",
											"pm.request.url.query.insert({key:\"query\",value: tempQuery});\r",
											"\r",
											"/*\r",
											"query=%7BUserTaskInstances(where%3A%7BprocessInstanceId%3A%7Bequal%3A%22d00e3fb7-d072-44fb-b3d4-4b2611d0b687%22%7D%7D%2CorderBy%3A%7BlastUpdate%3ADESC%7D)%7Bid%2Cname%2Cstate%2CactualOwner%2Cdescription%2ClastUpdate%2Cpriority%2CprocessId%2CprocessInstanceId%2Cendpoint%2Cinputs%2Coutputs%7D%7D\r",
											"*/"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var dataNode = JSON.parse(pm.response.text())[\"data\"];\r",
											"var userTaskInstancesNode = dataNode[\"UserTaskInstances\"];\r",
											"var firstUserTaskId = userTaskInstancesNode[0][\"id\"];\r",
											"var firstUserTaskName = userTaskInstancesNode[0][\"name\"];\r",
											"\r",
											"pm.collectionVariables.set(\"task-instance-id\", firstUserTaskId);\r",
											"pm.collectionVariables.set(\"task-instance-name\", firstUserTaskName);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-data-index-host}}:{{kogito-data-index-port}}/graphql",
									"host": [
										"{{kogito-data-index-host}}"
									],
									"port": "{{kogito-data-index-port}}",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Active User Tasks by Process Instance Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var dataNode = JSON.parse(pm.response.text())[\"data\"];\r",
											"var userTaskInstancesNode = dataNode[\"UserTaskInstances\"];\r",
											"var firstUserTask = userTaskInstancesNode[0][\"id\"];\r",
											"\r",
											"console.log(\"FUT = \" + firstUserTask);\r",
											"\r",
											"pm.collectionVariables.set(\"task-instance-id\", firstUserTask);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var tempQuery = pm.collectionVariables.get(\"query-get-active-user-tasks-by-process-instance-id\");\r",
											"tempQuery = encodeURIComponent(tempQuery.replace(\"process-instance-id\",pm.collectionVariables.get(\"process-instance-id\")));\r",
											"console.log(tempQuery);\r",
											"pm.request.url.query.insert({key:\"query\",value: tempQuery});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{kogito-data-index-host}}:{{kogito-data-index-port}}/graphql",
									"host": [
										"{{kogito-data-index-host}}"
									],
									"port": "{{kogito-data-index-port}}",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Describe entity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var tempQuery = encodeURIComponent(pm.collectionVariables.get(\"query-describe-entity\"));\r",
									"tempQuery = encodeURIComponent(tempQuery.replace(\"entity\",\"UserTaskInstances\"));\r",
									"console.log(tempQuery);\r",
									"pm.request.url.query.insert({key:\"query\",value: tempQuery});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{kogito-data-index-host}}:{{kogito-data-index-port}}/graphql",
							"host": [
								"{{kogito-data-index-host}}"
							],
							"port": "{{kogito-data-index-port}}",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Kogito Data-Audit",
			"item": [
				{
					"name": "Get Data Audit",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{kogito-service-host}}:{{kogito-service-port}}/data-audit/r",
							"host": [
								"{{kogito-service-host}}"
							],
							"port": "{{kogito-service-port}}",
							"path": [
								"data-audit",
								"r"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Data Audit (Q)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"query\": \"{ GetAllProcessInstancesStateByProcessId (processId : \\\"travellers\\\") { eventId, eventDate, processType, processId, processVersion, parentProcessInstanceId, rootProcessId, rootProcessInstanceId, processInstanceId, businessKey, eventType, outcome, state, slaDueDate, roles} }\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{kogito-service-host}}:{{kogito-service-port}}/data-audit/q",
							"host": [
								"{{kogito-service-host}}"
							],
							"port": "{{kogito-service-port}}",
							"path": [
								"data-audit",
								"q"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Data Audit (R)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"identifier\" : \"tests\",\r\n    \"graphQLDefinition\" : \"type EventTest { jobId : String, processInstanceId: String} type Query { tests (pagination: Pagination) : [ EventTest ] } \",\r\n    \"query\" : \"SELECT o.job_id, o.process_instance_id FROM job_execution_log o\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{kogito-service-host}}:{{kogito-service-port}}/data-audit/r",
							"host": [
								"{{kogito-service-host}}"
							],
							"port": "{{kogito-service-port}}",
							"path": [
								"data-audit",
								"r"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Example APP with UserTasks & Jobs",
			"item": [
				{
					"name": "usertasks-example-project API",
					"item": [
						{
							"name": "UserTasksProcess",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "firstUserTask/{taskId}",
											"item": [
												{
													"name": "/UserTasksProcess/:id/firstUserTask/:taskId",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/UserTasksProcess/:id/firstUserTask/:taskId?group=anim dolore est voluptate irure&group=veniam&user=ut non",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"UserTasksProcess",
																":id",
																"firstUserTask",
																":taskId"
															],
															"query": [
																{
																	"key": "group",
																	"value": "anim dolore est voluptate irure"
																},
																{
																	"key": "group",
																	"value": "veniam"
																},
																{
																	"key": "user",
																	"value": "ut non"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "ut non",
																	"description": "(Required) "
																},
																{
																	"key": "taskId",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/UserTasksProcess/:id/firstUserTask/:taskId?group=sit eu&group=sint cupidatat irure proident&user=ut non",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"UserTasksProcess",
																		":id",
																		"firstUserTask",
																		":taskId"
																	],
																	"query": [
																		{
																			"key": "group",
																			"value": "sit eu"
																		},
																		{
																			"key": "group",
																			"value": "sint cupidatat irure proident"
																		},
																		{
																			"key": "user",
																			"value": "ut non"
																		}
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "ut non",
																			"description": "(Required) "
																		},
																		{
																			"key": "taskId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"ut sunt velit\",\n  \"name\": \"dolore exercitation\",\n  \"state\": -99374622,\n  \"phase\": \"non dolore\",\n  \"phaseStatus\": \"velit aute laboris dolore\",\n  \"parameters\": {},\n  \"results\": {},\n  \"params\": {}\n}"
														}
													]
												},
												{
													"name": "/UserTasksProcess/:id/firstUserTask/:taskId",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/UserTasksProcess/:id/firstUserTask/:taskId?group=anim dolore est voluptate irure&group=veniam&user=ut non",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"UserTasksProcess",
																":id",
																"firstUserTask",
																":taskId"
															],
															"query": [
																{
																	"key": "group",
																	"value": "anim dolore est voluptate irure"
																},
																{
																	"key": "group",
																	"value": "veniam"
																},
																{
																	"key": "user",
																	"value": "ut non"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "ut non",
																	"description": "(Required) "
																},
																{
																	"key": "taskId",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/UserTasksProcess/:id/firstUserTask/:taskId?group=sit eu&group=sint cupidatat irure proident&user=ut non",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"UserTasksProcess",
																		":id",
																		"firstUserTask",
																		":taskId"
																	],
																	"query": [
																		{
																			"key": "group",
																			"value": "sit eu"
																		},
																		{
																			"key": "group",
																			"value": "sint cupidatat irure proident"
																		},
																		{
																			"key": "user",
																			"value": "ut non"
																		}
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "ut non",
																			"description": "(Required) "
																		},
																		{
																			"key": "taskId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "/UserTasksProcess/:id/firstUserTask/:taskId",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/UserTasksProcess/:id/firstUserTask/:taskId?group=anim dolore est voluptate irure&group=veniam&phase=complete&user=ut non",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"UserTasksProcess",
																":id",
																"firstUserTask",
																":taskId"
															],
															"query": [
																{
																	"key": "group",
																	"value": "anim dolore est voluptate irure"
																},
																{
																	"key": "group",
																	"value": "veniam"
																},
																{
																	"key": "phase",
																	"value": "complete"
																},
																{
																	"key": "user",
																	"value": "ut non"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "ut non",
																	"description": "(Required) "
																},
																{
																	"key": "taskId",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/UserTasksProcess/:id/firstUserTask/:taskId?group=sit eu&group=sint cupidatat irure proident&phase=complete&user=ut non",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"UserTasksProcess",
																		":id",
																		"firstUserTask",
																		":taskId"
																	],
																	"query": [
																		{
																			"key": "group",
																			"value": "sit eu"
																		},
																		{
																			"key": "group",
																			"value": "sint cupidatat irure proident"
																		},
																		{
																			"key": "phase",
																			"value": "complete"
																		},
																		{
																			"key": "user",
																			"value": "ut non"
																		}
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "ut non",
																			"description": "(Required) "
																		},
																		{
																			"key": "taskId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"sunt dolore labore nulla\"\n}"
														}
													]
												},
												{
													"name": "/UserTasksProcess/:id/firstUserTask/:taskId",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/UserTasksProcess/:id/firstUserTask/:taskId?group=anim dolore est voluptate irure&group=veniam&phase=abort&user=ut non",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"UserTasksProcess",
																":id",
																"firstUserTask",
																":taskId"
															],
															"query": [
																{
																	"key": "group",
																	"value": "anim dolore est voluptate irure"
																},
																{
																	"key": "group",
																	"value": "veniam"
																},
																{
																	"key": "phase",
																	"value": "abort"
																},
																{
																	"key": "user",
																	"value": "ut non"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "ut non",
																	"description": "(Required) "
																},
																{
																	"key": "taskId",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/UserTasksProcess/:id/firstUserTask/:taskId?group=sit eu&group=sint cupidatat irure proident&phase=abort&user=ut non",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"UserTasksProcess",
																		":id",
																		"firstUserTask",
																		":taskId"
																	],
																	"query": [
																		{
																			"key": "group",
																			"value": "sit eu"
																		},
																		{
																			"key": "group",
																			"value": "sint cupidatat irure proident"
																		},
																		{
																			"key": "phase",
																			"value": "abort"
																		},
																		{
																			"key": "user",
																			"value": "ut non"
																		}
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "ut non",
																			"description": "(Required) "
																		},
																		{
																			"key": "taskId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"sunt dolore labore nulla\"\n}"
														}
													]
												},
												{
													"name": "/UserTasksProcess/:id/firstUserTask/:taskId/phases/:phase",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/UserTasksProcess/:id/firstUserTask/:taskId/phases/:phase?group=anim dolore est voluptate irure&group=veniam&user=ut non",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"UserTasksProcess",
																":id",
																"firstUserTask",
																":taskId",
																"phases",
																":phase"
															],
															"query": [
																{
																	"key": "group",
																	"value": "anim dolore est voluptate irure"
																},
																{
																	"key": "group",
																	"value": "veniam"
																},
																{
																	"key": "user",
																	"value": "ut non"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "ut non",
																	"description": "(Required) "
																},
																{
																	"key": "phase",
																	"value": "ut non",
																	"description": "(Required) "
																},
																{
																	"key": "taskId",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/UserTasksProcess/:id/firstUserTask/:taskId/phases/:phase?group=sit eu&group=sint cupidatat irure proident&user=ut non",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"UserTasksProcess",
																		":id",
																		"firstUserTask",
																		":taskId",
																		"phases",
																		":phase"
																	],
																	"query": [
																		{
																			"key": "group",
																			"value": "sit eu"
																		},
																		{
																			"key": "group",
																			"value": "sint cupidatat irure proident"
																		},
																		{
																			"key": "user",
																			"value": "ut non"
																		}
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "ut non",
																			"description": "(Required) "
																		},
																		{
																			"key": "phase",
																			"value": "ut non",
																			"description": "(Required) "
																		},
																		{
																			"key": "taskId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"sunt dolore labore nulla\"\n}"
														}
													]
												},
												{
													"name": "/UserTasksProcess/:id/firstUserTask/:taskId/schema",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/UserTasksProcess/:id/firstUserTask/:taskId/schema?group=anim dolore est voluptate irure&group=veniam&user=ut non",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"UserTasksProcess",
																":id",
																"firstUserTask",
																":taskId",
																"schema"
															],
															"query": [
																{
																	"key": "group",
																	"value": "anim dolore est voluptate irure"
																},
																{
																	"key": "group",
																	"value": "veniam"
																},
																{
																	"key": "user",
																	"value": "ut non"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "ut non",
																	"description": "(Required) "
																},
																{
																	"key": "taskId",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/UserTasksProcess/:id/firstUserTask/:taskId/schema?group=sit eu&group=sint cupidatat irure proident&user=ut non",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"UserTasksProcess",
																		":id",
																		"firstUserTask",
																		":taskId",
																		"schema"
																	],
																	"query": [
																		{
																			"key": "group",
																			"value": "sit eu"
																		},
																		{
																			"key": "group",
																			"value": "sint cupidatat irure proident"
																		},
																		{
																			"key": "user",
																			"value": "ut non"
																		}
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "ut non",
																			"description": "(Required) "
																		},
																		{
																			"key": "taskId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"et7\": {}\n}"
														}
													]
												}
											]
										},
										{
											"name": "UserTasksProcess",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/UserTasksProcess/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"UserTasksProcess",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "ut non",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/UserTasksProcess/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"UserTasksProcess",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"sunt dolore labore nulla\"\n}"
												}
											]
										},
										{
											"name": "UserTasksProcess",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"expirationTime\": \"cupidatat amet\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/UserTasksProcess/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"UserTasksProcess",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "ut non",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"expirationTime\": \"cupidatat amet\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/UserTasksProcess/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"UserTasksProcess",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"sunt dolore labore nulla\"\n}"
												}
											]
										},
										{
											"name": "UserTasksProcess",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/UserTasksProcess/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"UserTasksProcess",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "ut non",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/UserTasksProcess/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"UserTasksProcess",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"sunt dolore labore nulla\"\n}"
												}
											]
										},
										{
											"name": "UserTasksProcess",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"expirationTime\": \"cupidatat amet\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/UserTasksProcess/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"UserTasksProcess",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "ut non",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"expirationTime\": \"cupidatat amet\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/UserTasksProcess/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"UserTasksProcess",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"sunt dolore labore nulla\"\n}"
												}
											]
										},
										{
											"name": "/UserTasksProcess/:id/Task_expired",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/UserTasksProcess/:id/Task_expired",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"UserTasksProcess",
														":id",
														"Task_expired"
													],
													"variable": [
														{
															"key": "id",
															"value": "ut non",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/UserTasksProcess/:id/Task_expired",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"UserTasksProcess",
																":id",
																"Task_expired"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"sunt dolore labore nulla\"\n}"
												}
											]
										},
										{
											"name": "UserTasksProcess",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/UserTasksProcess/:id/tasks?group=anim dolore est voluptate irure&group=veniam&user=ut non",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"UserTasksProcess",
														":id",
														"tasks"
													],
													"query": [
														{
															"key": "group",
															"value": "anim dolore est voluptate irure"
														},
														{
															"key": "group",
															"value": "veniam"
														},
														{
															"key": "user",
															"value": "ut non"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "ut non",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/UserTasksProcess/:id/tasks?group=sit eu&group=sint cupidatat irure proident&user=ut non",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"UserTasksProcess",
																":id",
																"tasks"
															],
															"query": [
																{
																	"key": "group",
																	"value": "sit eu"
																},
																{
																	"key": "group",
																	"value": "sint cupidatat irure proident"
																},
																{
																	"key": "user",
																	"value": "ut non"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"sed consequat deserunt commodo Ut\",\n    \"name\": \"in\",\n    \"state\": 25998832,\n    \"phase\": \"in qui Ut magna\",\n    \"phaseStatus\": \"cillum officia\",\n    \"parameters\": {},\n    \"results\": {}\n  },\n  {\n    \"id\": \"dolore c\",\n    \"name\": \"et pariatur aute temp\",\n    \"state\": -67114677,\n    \"phase\": \"ut\",\n    \"phaseStatus\": \"minim Lorem\",\n    \"parameters\": {},\n    \"results\": {}\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "UserTasksProcess",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/UserTasksProcess",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"UserTasksProcess"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/UserTasksProcess",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"UserTasksProcess"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"dolor eiusmod id\"\n  },\n  {\n    \"id\": \"sunt\"\n  }\n]"
										}
									]
								},
								{
									"name": "UserTasksProcess",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"expirationTime\": \"cupidatat amet\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/UserTasksProcess?businessKey=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"UserTasksProcess"
											],
											"query": [
												{
													"key": "businessKey",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"expirationTime\": \"cupidatat amet\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/UserTasksProcess?businessKey=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"UserTasksProcess"
													],
													"query": [
														{
															"key": "businessKey",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/UserTasksProcess/firstUserTask/schema",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/UserTasksProcess/firstUserTask/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"UserTasksProcess",
												"firstUserTask",
												"schema"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/UserTasksProcess/firstUserTask/schema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"UserTasksProcess",
														"firstUserTask",
														"schema"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"et7\": {}\n}"
										}
									]
								},
								{
									"name": "UserTasksProcess",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/UserTasksProcess/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"UserTasksProcess",
												"schema"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/UserTasksProcess/schema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"UserTasksProcess",
														"schema"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"et7\": {}\n}"
										}
									]
								}
							]
						},
						{
							"name": "callback",
							"item": [
								{
									"name": "get Callback Test",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/callback",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"callback"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/callback",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"callback"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "ut non"
										}
									]
								},
								{
									"name": "post Callback Test",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/callback?limit=ut non",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"callback"
											],
											"query": [
												{
													"key": "limit",
													"value": "ut non"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/callback?limit=ut non",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"callback"
													],
													"query": [
														{
															"key": "limit",
															"value": "ut non"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "ut non"
										}
									]
								}
							]
						},
						{
							"name": "data-audit",
							"item": [
								{
									"name": "r",
									"item": [
										{
											"name": "/data-audit/r",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/data-audit/r",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-audit",
														"r"
													]
												}
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/data-audit/r",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"data-audit",
																"r"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "/data-audit/r",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/data-audit/r",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-audit",
														"r"
													]
												}
											},
											"response": [
												{
													"name": "Created",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/data-audit/r",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"data-audit",
																"r"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "/data-audit/q",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/data-audit/q",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"data-audit",
												"q"
											]
										}
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/data-audit/q",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"data-audit",
														"q"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "forms",
							"item": [
								{
									"name": "{formName}",
									"item": [
										{
											"name": "/forms/:formName",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/forms/:formName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"forms",
														":formName"
													],
													"variable": [
														{
															"key": "formName",
															"value": "yoM@\"a7#K,*",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/forms/:formName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"forms",
																":formName"
															],
															"variable": [
																{
																	"key": "formName",
																	"value": "yoM@\"a7#K,*",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "/forms/:formName",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"source\": \"aute\",\n  \"configuration\": {\n    \"schema\": \"culpa\",\n    \"resources\": {\n      \"scripts\": {\n        \"fugiat_620\": \"et enim\"\n      },\n      \"styles\": {\n        \"ipsum4c8\": \"sint ut dolore\",\n        \"aliqua_83\": \"labore mollit voluptate\",\n        \"consectetur_88\": \"occaecat ut incididunt \"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/forms/:formName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"forms",
														":formName"
													],
													"variable": [
														{
															"key": "formName",
															"value": "yoM@\"a7#K,*",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"source\": \"aute\",\n  \"configuration\": {\n    \"schema\": \"culpa\",\n    \"resources\": {\n      \"scripts\": {\n        \"fugiat_620\": \"et enim\"\n      },\n      \"styles\": {\n        \"ipsum4c8\": \"sint ut dolore\",\n        \"aliqua_83\": \"labore mollit voluptate\",\n        \"consectetur_88\": \"occaecat ut incididunt \"\n      }\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/forms/:formName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"forms",
																":formName"
															],
															"variable": [
																{
																	"key": "formName",
																	"value": "yoM@\"a7#K,*",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "/forms/count",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/forms/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"forms",
												"count"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/forms/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"forms",
														"count"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/forms/list",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/forms/list?names=[\"nostrud occaecat esse \",\"est non anim\"]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"forms",
												"list"
											],
											"query": [
												{
													"key": "names",
													"value": "[\"nostrud occaecat esse \",\"est non anim\"]"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/forms/list?names=<string>,<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"forms",
														"list"
													],
													"query": [
														{
															"key": "names",
															"value": "<string>,<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "graphql",
							"item": [
								{
									"name": "/graphql",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/graphql",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": [
										{
											"name": "No Content",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/graphql",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/graphql",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/graphql",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"graphql"
											]
										}
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/graphql",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"graphql"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "jobs",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "get Job",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/jobs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"jobs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "ut non",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/jobs/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"jobs",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"dolore consectetur culpa aliq\",\n  \"expirationTime\": \"2022-03-10T12:15:50-04:00\",\n  \"priority\": 60730310,\n  \"callbackEndpoint\": \"sit nostrud pariatur velit\",\n  \"processInstanceId\": \"nulla\",\n  \"rootProcessInstanceId\": \"in labore e\",\n  \"processId\": \"consequat in amet nulla\",\n  \"rootProcessId\": \"velit tempor sunt dolor\",\n  \"nodeInstanceId\": \"reprehend\",\n  \"repeatInterval\": -75629146,\n  \"repeatLimit\": 68199394,\n  \"scheduledId\": \"qui occaecat Excepteur\",\n  \"retries\": -63859608,\n  \"status\": \"SCHEDULED\",\n  \"lastUpdate\": \"2022-03-10T12:15:50-04:00\",\n  \"executionCounter\": 99955070,\n  \"executionResponse\": {\n    \"message\": \"ea eu\",\n    \"code\": \"esse elit ipsum sint\",\n    \"timestamp\": \"2022-03-10T12:15:50-04:00\",\n    \"jobId\": \"consectetur aute\"\n  }\n}"
												}
											]
										},
										{
											"name": "delete Job",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/jobs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"jobs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "ut non",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/jobs/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"jobs",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"dolore consectetur culpa aliq\",\n  \"expirationTime\": \"2022-03-10T12:15:50-04:00\",\n  \"priority\": 60730310,\n  \"callbackEndpoint\": \"sit nostrud pariatur velit\",\n  \"processInstanceId\": \"nulla\",\n  \"rootProcessInstanceId\": \"in labore e\",\n  \"processId\": \"consequat in amet nulla\",\n  \"rootProcessId\": \"velit tempor sunt dolor\",\n  \"nodeInstanceId\": \"reprehend\",\n  \"repeatInterval\": -75629146,\n  \"repeatLimit\": 68199394,\n  \"scheduledId\": \"qui occaecat Excepteur\",\n  \"retries\": -63859608,\n  \"status\": \"SCHEDULED\",\n  \"lastUpdate\": \"2022-03-10T12:15:50-04:00\",\n  \"executionCounter\": 99955070,\n  \"executionResponse\": {\n    \"message\": \"ea eu\",\n    \"code\": \"esse elit ipsum sint\",\n    \"timestamp\": \"2022-03-10T12:15:50-04:00\",\n    \"jobId\": \"consectetur aute\"\n  }\n}"
												}
											]
										},
										{
											"name": "patch Job",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"minim do\",\n  \"expirationTime\": \"2022-03-10T12:15:50-04:00\",\n  \"priority\": -45311795,\n  \"callbackEndpoint\": \"magna\",\n  \"processInstanceId\": \"dolore Excepteur veniam fugiat\",\n  \"rootProcessInstanceId\": \"cupidatat dolore ea tempor\",\n  \"processId\": \"adipisicing\",\n  \"rootProcessId\": \"culpa occaecat elit\",\n  \"nodeInstanceId\": \"incididunt pariatur\",\n  \"repeatInterval\": 97940268,\n  \"repeatLimit\": -55691860\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/jobs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"jobs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "ut non",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "PATCH",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": \"minim do\",\n  \"expirationTime\": \"2022-03-10T12:15:50-04:00\",\n  \"priority\": -45311795,\n  \"callbackEndpoint\": \"magna\",\n  \"processInstanceId\": \"dolore Excepteur veniam fugiat\",\n  \"rootProcessInstanceId\": \"cupidatat dolore ea tempor\",\n  \"processId\": \"adipisicing\",\n  \"rootProcessId\": \"culpa occaecat elit\",\n  \"nodeInstanceId\": \"incididunt pariatur\",\n  \"repeatInterval\": 97940268,\n  \"repeatLimit\": -55691860\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/jobs/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"jobs",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"dolore consectetur culpa aliq\",\n  \"expirationTime\": \"2022-03-10T12:15:50-04:00\",\n  \"priority\": 60730310,\n  \"callbackEndpoint\": \"sit nostrud pariatur velit\",\n  \"processInstanceId\": \"nulla\",\n  \"rootProcessInstanceId\": \"in labore e\",\n  \"processId\": \"consequat in amet nulla\",\n  \"rootProcessId\": \"velit tempor sunt dolor\",\n  \"nodeInstanceId\": \"reprehend\",\n  \"repeatInterval\": -75629146,\n  \"repeatLimit\": 68199394,\n  \"scheduledId\": \"qui occaecat Excepteur\",\n  \"retries\": -63859608,\n  \"status\": \"SCHEDULED\",\n  \"lastUpdate\": \"2022-03-10T12:15:50-04:00\",\n  \"executionCounter\": 99955070,\n  \"executionResponse\": {\n    \"message\": \"ea eu\",\n    \"code\": \"esse elit ipsum sint\",\n    \"timestamp\": \"2022-03-10T12:15:50-04:00\",\n    \"jobId\": \"consectetur aute\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "create Job",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"minim do\",\n  \"expirationTime\": \"2022-03-10T12:15:50-04:00\",\n  \"priority\": -45311795,\n  \"callbackEndpoint\": \"magna\",\n  \"processInstanceId\": \"dolore Excepteur veniam fugiat\",\n  \"rootProcessInstanceId\": \"cupidatat dolore ea tempor\",\n  \"processId\": \"adipisicing\",\n  \"rootProcessId\": \"culpa occaecat elit\",\n  \"nodeInstanceId\": \"incididunt pariatur\",\n  \"repeatInterval\": 97940268,\n  \"repeatLimit\": -55691860\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/jobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"jobs"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"minim do\",\n  \"expirationTime\": \"2022-03-10T12:15:50-04:00\",\n  \"priority\": -45311795,\n  \"callbackEndpoint\": \"magna\",\n  \"processInstanceId\": \"dolore Excepteur veniam fugiat\",\n  \"rootProcessInstanceId\": \"cupidatat dolore ea tempor\",\n  \"processId\": \"adipisicing\",\n  \"rootProcessId\": \"culpa occaecat elit\",\n  \"nodeInstanceId\": \"incididunt pariatur\",\n  \"repeatInterval\": 97940268,\n  \"repeatLimit\": -55691860\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/jobs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"jobs"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"dolore consectetur culpa aliq\",\n  \"expirationTime\": \"2022-03-10T12:15:50-04:00\",\n  \"priority\": 60730310,\n  \"callbackEndpoint\": \"sit nostrud pariatur velit\",\n  \"processInstanceId\": \"nulla\",\n  \"rootProcessInstanceId\": \"in labore e\",\n  \"processId\": \"consequat in amet nulla\",\n  \"rootProcessId\": \"velit tempor sunt dolor\",\n  \"nodeInstanceId\": \"reprehend\",\n  \"repeatInterval\": -75629146,\n  \"repeatLimit\": 68199394,\n  \"scheduledId\": \"qui occaecat Excepteur\",\n  \"retries\": -63859608,\n  \"status\": \"SCHEDULED\",\n  \"lastUpdate\": \"2022-03-10T12:15:50-04:00\",\n  \"executionCounter\": 99955070,\n  \"executionResponse\": {\n    \"message\": \"ea eu\",\n    \"code\": \"esse elit ipsum sint\",\n    \"timestamp\": \"2022-03-10T12:15:50-04:00\",\n    \"jobId\": \"consectetur aute\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "management",
							"item": [
								{
									"name": "processes",
									"item": [
										{
											"name": "{processId}",
											"item": [
												{
													"name": "instances/{processInstanceId}",
													"item": [
														{
															"name": "nodeInstances",
															"item": [
																{
																	"name": "{nodeInstanceId}",
																	"item": [
																		{
																			"name": "/management/processes/:processId/instances/:processInstanceId/nodeInstances/:nodeInstanceId",
																			"request": {
																				"method": "POST",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/management/processes/:processId/instances/:processInstanceId/nodeInstances/:nodeInstanceId",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"management",
																						"processes",
																						":processId",
																						"instances",
																						":processInstanceId",
																						"nodeInstances",
																						":nodeInstanceId"
																					],
																					"variable": [
																						{
																							"key": "nodeInstanceId",
																							"value": "ut non",
																							"description": "(Required) "
																						},
																						{
																							"key": "processId",
																							"value": "ut non",
																							"description": "(Required) "
																						},
																						{
																							"key": "processInstanceId",
																							"value": "ut non",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"response": [
																				{
																					"name": "OK",
																					"originalRequest": {
																						"method": "POST",
																						"header": [],
																						"url": {
																							"raw": "{{baseUrl}}/management/processes/:processId/instances/:processInstanceId/nodeInstances/:nodeInstanceId",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"management",
																								"processes",
																								":processId",
																								"instances",
																								":processInstanceId",
																								"nodeInstances",
																								":nodeInstanceId"
																							],
																							"variable": [
																								{
																									"key": "nodeInstanceId",
																									"value": "ut non",
																									"description": "(Required) "
																								},
																								{
																									"key": "processId",
																									"value": "ut non",
																									"description": "(Required) "
																								},
																								{
																									"key": "processInstanceId",
																									"value": "ut non",
																									"description": "(Required) "
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "text",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "text/plain"
																						}
																					],
																					"cookie": [],
																					"body": ""
																				}
																			]
																		},
																		{
																			"name": "/management/processes/:processId/instances/:processInstanceId/nodeInstances/:nodeInstanceId",
																			"request": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/management/processes/:processId/instances/:processInstanceId/nodeInstances/:nodeInstanceId",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"management",
																						"processes",
																						":processId",
																						"instances",
																						":processInstanceId",
																						"nodeInstances",
																						":nodeInstanceId"
																					],
																					"variable": [
																						{
																							"key": "nodeInstanceId",
																							"value": "ut non",
																							"description": "(Required) "
																						},
																						{
																							"key": "processId",
																							"value": "ut non",
																							"description": "(Required) "
																						},
																						{
																							"key": "processInstanceId",
																							"value": "ut non",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"response": [
																				{
																					"name": "OK",
																					"originalRequest": {
																						"method": "DELETE",
																						"header": [],
																						"url": {
																							"raw": "{{baseUrl}}/management/processes/:processId/instances/:processInstanceId/nodeInstances/:nodeInstanceId",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"management",
																								"processes",
																								":processId",
																								"instances",
																								":processInstanceId",
																								"nodeInstances",
																								":nodeInstanceId"
																							],
																							"variable": [
																								{
																									"key": "nodeInstanceId",
																									"value": "ut non",
																									"description": "(Required) "
																								},
																								{
																									"key": "processId",
																									"value": "ut non",
																									"description": "(Required) "
																								},
																								{
																									"key": "processInstanceId",
																									"value": "ut non",
																									"description": "(Required) "
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "text",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "text/plain"
																						}
																					],
																					"cookie": [],
																					"body": ""
																				}
																			]
																		}
																	]
																},
																{
																	"name": "/management/processes/:processId/instances/:processInstanceId/nodeInstances",
																	"request": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/management/processes/:processId/instances/:processInstanceId/nodeInstances",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"management",
																				"processes",
																				":processId",
																				"instances",
																				":processInstanceId",
																				"nodeInstances"
																			],
																			"variable": [
																				{
																					"key": "processId",
																					"value": "ut non",
																					"description": "(Required) "
																				},
																				{
																					"key": "processInstanceId",
																					"value": "ut non",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "OK",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/management/processes/:processId/instances/:processInstanceId/nodeInstances",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"management",
																						"processes",
																						":processId",
																						"instances",
																						":processInstanceId",
																						"nodeInstances"
																					],
																					"variable": [
																						{
																							"key": "processId",
																							"value": "ut non",
																							"description": "(Required) "
																						},
																						{
																							"key": "processInstanceId",
																							"value": "ut non",
																							"description": "(Required) "
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																}
															]
														},
														{
															"name": "/management/processes/:processId/instances/:processInstanceId",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/management/processes/:processId/instances/:processInstanceId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"management",
																		"processes",
																		":processId",
																		"instances",
																		":processInstanceId"
																	],
																	"variable": [
																		{
																			"key": "processId",
																			"value": "ut non",
																			"description": "(Required) "
																		},
																		{
																			"key": "processInstanceId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "OK",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/management/processes/:processId/instances/:processInstanceId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"management",
																				"processes",
																				":processId",
																				"instances",
																				":processInstanceId"
																			],
																			"variable": [
																				{
																					"key": "processId",
																					"value": "ut non",
																					"description": "(Required) "
																				},
																				{
																					"key": "processInstanceId",
																					"value": "ut non",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "/management/processes/:processId/instances/:processInstanceId/error",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/management/processes/:processId/instances/:processInstanceId/error",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"management",
																		"processes",
																		":processId",
																		"instances",
																		":processInstanceId",
																		"error"
																	],
																	"variable": [
																		{
																			"key": "processId",
																			"value": "ut non",
																			"description": "(Required) "
																		},
																		{
																			"key": "processInstanceId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "OK",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/management/processes/:processId/instances/:processInstanceId/error",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"management",
																				"processes",
																				":processId",
																				"instances",
																				":processInstanceId",
																				"error"
																			],
																			"variable": [
																				{
																					"key": "processId",
																					"value": "ut non",
																					"description": "(Required) "
																				},
																				{
																					"key": "processInstanceId",
																					"value": "ut non",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "/management/processes/:processId/instances/:processInstanceId/migrate",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"targetProcessId\": \"aliquip Lorem aute nostrud\",\n  \"targetProcessVersion\": \"eu sunt nostru\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/management/processes/:processId/instances/:processInstanceId/migrate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"management",
																		"processes",
																		":processId",
																		"instances",
																		":processInstanceId",
																		"migrate"
																	],
																	"variable": [
																		{
																			"key": "processId",
																			"value": "ut non",
																			"description": "(Required) "
																		},
																		{
																			"key": "processInstanceId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "OK",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"targetProcessId\": \"aliquip Lorem aute nostrud\",\n  \"targetProcessVersion\": \"eu sunt nostru\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/management/processes/:processId/instances/:processInstanceId/migrate",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"management",
																				"processes",
																				":processId",
																				"instances",
																				":processInstanceId",
																				"migrate"
																			],
																			"variable": [
																				{
																					"key": "processId",
																					"value": "ut non",
																					"description": "(Required) "
																				},
																				{
																					"key": "processInstanceId",
																					"value": "ut non",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "/management/processes/:processId/instances/:processInstanceId/nodes/:nodeId",
															"request": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/management/processes/:processId/instances/:processInstanceId/nodes/:nodeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"management",
																		"processes",
																		":processId",
																		"instances",
																		":processInstanceId",
																		"nodes",
																		":nodeId"
																	],
																	"variable": [
																		{
																			"key": "nodeId",
																			"value": "ut non",
																			"description": "(Required) "
																		},
																		{
																			"key": "processId",
																			"value": "ut non",
																			"description": "(Required) "
																		},
																		{
																			"key": "processInstanceId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "OK",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/management/processes/:processId/instances/:processInstanceId/nodes/:nodeId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"management",
																				"processes",
																				":processId",
																				"instances",
																				":processInstanceId",
																				"nodes",
																				":nodeId"
																			],
																			"variable": [
																				{
																					"key": "nodeId",
																					"value": "ut non",
																					"description": "(Required) "
																				},
																				{
																					"key": "processId",
																					"value": "ut non",
																					"description": "(Required) "
																				},
																				{
																					"key": "processInstanceId",
																					"value": "ut non",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "/management/processes/:processId/instances/:processInstanceId/retrigger",
															"request": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/management/processes/:processId/instances/:processInstanceId/retrigger",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"management",
																		"processes",
																		":processId",
																		"instances",
																		":processInstanceId",
																		"retrigger"
																	],
																	"variable": [
																		{
																			"key": "processId",
																			"value": "ut non",
																			"description": "(Required) "
																		},
																		{
																			"key": "processInstanceId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "OK",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/management/processes/:processId/instances/:processInstanceId/retrigger",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"management",
																				"processes",
																				":processId",
																				"instances",
																				":processInstanceId",
																				"retrigger"
																			],
																			"variable": [
																				{
																					"key": "processId",
																					"value": "ut non",
																					"description": "(Required) "
																				},
																				{
																					"key": "processInstanceId",
																					"value": "ut non",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "/management/processes/:processId/instances/:processInstanceId/skip",
															"request": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/management/processes/:processId/instances/:processInstanceId/skip",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"management",
																		"processes",
																		":processId",
																		"instances",
																		":processInstanceId",
																		"skip"
																	],
																	"variable": [
																		{
																			"key": "processId",
																			"value": "ut non",
																			"description": "(Required) "
																		},
																		{
																			"key": "processInstanceId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "OK",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/management/processes/:processId/instances/:processInstanceId/skip",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"management",
																				"processes",
																				":processId",
																				"instances",
																				":processInstanceId",
																				"skip"
																			],
																			"variable": [
																				{
																					"key": "processId",
																					"value": "ut non",
																					"description": "(Required) "
																				},
																				{
																					"key": "processInstanceId",
																					"value": "ut non",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "/management/processes/:processId",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/management/processes/:processId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"management",
																"processes",
																":processId"
															],
															"variable": [
																{
																	"key": "processId",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/management/processes/:processId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"management",
																		"processes",
																		":processId"
																	],
																	"variable": [
																		{
																			"key": "processId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "/management/processes/:processId/migrate",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"targetProcessId\": \"aliquip Lorem aute nostrud\",\n  \"targetProcessVersion\": \"eu sunt nostru\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/management/processes/:processId/migrate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"management",
																"processes",
																":processId",
																"migrate"
															],
															"variable": [
																{
																	"key": "processId",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"targetProcessId\": \"aliquip Lorem aute nostrud\",\n  \"targetProcessVersion\": \"eu sunt nostru\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/management/processes/:processId/migrate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"management",
																		"processes",
																		":processId",
																		"migrate"
																	],
																	"variable": [
																		{
																			"key": "processId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "/management/processes/:processId/nodes",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/management/processes/:processId/nodes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"management",
																"processes",
																":processId",
																"nodes"
															],
															"variable": [
																{
																	"key": "processId",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/management/processes/:processId/nodes",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"management",
																		"processes",
																		":processId",
																		"nodes"
																	],
																	"variable": [
																		{
																			"key": "processId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "/management/processes/:processId/source",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/management/processes/:processId/source",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"management",
																"processes",
																":processId",
																"source"
															],
															"variable": [
																{
																	"key": "processId",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/management/processes/:processId/source",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"management",
																		"processes",
																		":processId",
																		"source"
																	],
																	"variable": [
																		{
																			"key": "processId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "/management/processes/:processId/sources",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/management/processes/:processId/sources",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"management",
																"processes",
																":processId",
																"sources"
															],
															"variable": [
																{
																	"key": "processId",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/management/processes/:processId/sources",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"management",
																		"processes",
																		":processId",
																		"sources"
																	],
																	"variable": [
																		{
																			"key": "processId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"uri\": \"ut\"\n  },\n  {\n    \"uri\": \"Ut consequat anim sint Excepteur\"\n  }\n]"
														}
													]
												}
											]
										},
										{
											"name": "/management/processes",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/management/processes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"management",
														"processes"
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/management/processes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"management",
																"processes"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "/management/processes/sources",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/management/processes/sources?uri=ut non",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"management",
														"processes",
														"sources"
													],
													"query": [
														{
															"key": "uri",
															"value": "ut non"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/management/processes/sources?uri=ut non",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"management",
																"processes",
																"sources"
															],
															"query": [
																{
																	"key": "uri",
																	"value": "ut non"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "/management/jobs/:processId/instances/:processInstanceId/timers/:timerId",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "ut non",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/management/jobs/:processId/instances/:processInstanceId/timers/:timerId?limit=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"management",
												"jobs",
												":processId",
												"instances",
												":processInstanceId",
												"timers",
												":timerId"
											],
											"query": [
												{
													"key": "limit",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "processId",
													"value": "ut non",
													"description": "(Required) "
												},
												{
													"key": "processInstanceId",
													"value": "ut non",
													"description": "(Required) "
												},
												{
													"key": "timerId",
													"value": "ut non",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "ut non",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/management/jobs/:processId/instances/:processInstanceId/timers/:timerId?limit=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"management",
														"jobs",
														":processId",
														"instances",
														":processInstanceId",
														"timers",
														":timerId"
													],
													"query": [
														{
															"key": "limit",
															"value": "0"
														}
													],
													"variable": [
														{
															"key": "processId",
															"value": "ut non",
															"description": "(Required) "
														},
														{
															"key": "processInstanceId",
															"value": "ut non",
															"description": "(Required) "
														},
														{
															"key": "timerId",
															"value": "ut non",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/management/shutdown",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/management/shutdown",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"management",
												"shutdown"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/management/shutdown",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"management",
														"shutdown"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"\""
										}
									]
								}
							]
						},
						{
							"name": "svg/processes/{processId}",
							"item": [
								{
									"name": "/svg/processes/:processId",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/svg/processes/:processId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"svg",
												"processes",
												":processId"
											],
											"variable": [
												{
													"key": "processId",
													"value": "ut non",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/svg/processes/:processId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"svg",
														"processes",
														":processId"
													],
													"variable": [
														{
															"key": "processId",
															"value": "ut non",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/svg/processes/:processId/instances/:processInstanceId",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/svg/processes/:processId/instances/:processInstanceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"svg",
												"processes",
												":processId",
												"instances",
												":processInstanceId"
											],
											"variable": [
												{
													"key": "processId",
													"value": "ut non",
													"description": "(Required) "
												},
												{
													"key": "processInstanceId",
													"value": "ut non",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/svg/processes/:processId/instances/:processInstanceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"svg",
														"processes",
														":processId",
														"instances",
														":processInstanceId"
													],
													"variable": [
														{
															"key": "processId",
															"value": "ut non",
															"description": "(Required) "
														},
														{
															"key": "processInstanceId",
															"value": "ut non",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "usertasks/instance",
							"item": [
								{
									"name": "{taskId}",
									"item": [
										{
											"name": "attachments",
											"item": [
												{
													"name": "{attachmentId}",
													"item": [
														{
															"name": "/usertasks/instance/:taskId/attachments/:attachmentId",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/usertasks/instance/:taskId/attachments/:attachmentId?group=anim dolore est voluptate irure&group=veniam&user=ut non",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"usertasks",
																		"instance",
																		":taskId",
																		"attachments",
																		":attachmentId"
																	],
																	"query": [
																		{
																			"key": "group",
																			"value": "anim dolore est voluptate irure"
																		},
																		{
																			"key": "group",
																			"value": "veniam"
																		},
																		{
																			"key": "user",
																			"value": "ut non"
																		}
																	],
																	"variable": [
																		{
																			"key": "attachmentId",
																			"value": "ut non",
																			"description": "(Required) "
																		},
																		{
																			"key": "taskId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "OK",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/usertasks/instance/:taskId/attachments/:attachmentId?group=sit eu&group=sint cupidatat irure proident&user=ut non",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"usertasks",
																				"instance",
																				":taskId",
																				"attachments",
																				":attachmentId"
																			],
																			"query": [
																				{
																					"key": "group",
																					"value": "sit eu"
																				},
																				{
																					"key": "group",
																					"value": "sint cupidatat irure proident"
																				},
																				{
																					"key": "user",
																					"value": "ut non"
																				}
																			],
																			"variable": [
																				{
																					"key": "attachmentId",
																					"value": "ut non",
																					"description": "(Required) "
																				},
																				{
																					"key": "taskId",
																					"value": "ut non",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"id\": \"eu\",\n  \"content\": \"https://lLUMCWviIqkxdJChVBsnODMkhADdT.tufgrCbrvJP5rcL4OnJsKNLg.3bJOZsQnloc+50Vp7a\",\n  \"updatedAt\": \"2022-03-10\",\n  \"updatedBy\": \"nulla amet eiusmod id anim\",\n  \"name\": \"ea Duis labore velit\"\n}"
																}
															]
														},
														{
															"name": "/usertasks/instance/:taskId/attachments/:attachmentId",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"uri\": \"http://mEzKcfRAXooHIMUjxXfNKypdE.vqmbneztTa9ux8zVFNd-MMvg8bV1OJYQnLbOJY8AL5BFoMdZF,Q,9T17hEKWRR\",\n  \"name\": \"sed elit ex\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/usertasks/instance/:taskId/attachments/:attachmentId?group=anim dolore est voluptate irure&group=veniam&user=ut non",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"usertasks",
																		"instance",
																		":taskId",
																		"attachments",
																		":attachmentId"
																	],
																	"query": [
																		{
																			"key": "group",
																			"value": "anim dolore est voluptate irure"
																		},
																		{
																			"key": "group",
																			"value": "veniam"
																		},
																		{
																			"key": "user",
																			"value": "ut non"
																		}
																	],
																	"variable": [
																		{
																			"key": "attachmentId",
																			"value": "ut non",
																			"description": "(Required) "
																		},
																		{
																			"key": "taskId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "OK",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"uri\": \"http://mEzKcfRAXooHIMUjxXfNKypdE.vqmbneztTa9ux8zVFNd-MMvg8bV1OJYQnLbOJY8AL5BFoMdZF,Q,9T17hEKWRR\",\n  \"name\": \"sed elit ex\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/usertasks/instance/:taskId/attachments/:attachmentId?group=sit eu&group=sint cupidatat irure proident&user=ut non",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"usertasks",
																				"instance",
																				":taskId",
																				"attachments",
																				":attachmentId"
																			],
																			"query": [
																				{
																					"key": "group",
																					"value": "sit eu"
																				},
																				{
																					"key": "group",
																					"value": "sint cupidatat irure proident"
																				},
																				{
																					"key": "user",
																					"value": "ut non"
																				}
																			],
																			"variable": [
																				{
																					"key": "attachmentId",
																					"value": "ut non",
																					"description": "(Required) "
																				},
																				{
																					"key": "taskId",
																					"value": "ut non",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"id\": \"eu\",\n  \"content\": \"https://lLUMCWviIqkxdJChVBsnODMkhADdT.tufgrCbrvJP5rcL4OnJsKNLg.3bJOZsQnloc+50Vp7a\",\n  \"updatedAt\": \"2022-03-10\",\n  \"updatedBy\": \"nulla amet eiusmod id anim\",\n  \"name\": \"ea Duis labore velit\"\n}"
																}
															]
														},
														{
															"name": "/usertasks/instance/:taskId/attachments/:attachmentId",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/usertasks/instance/:taskId/attachments/:attachmentId?group=anim dolore est voluptate irure&group=veniam&user=ut non",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"usertasks",
																		"instance",
																		":taskId",
																		"attachments",
																		":attachmentId"
																	],
																	"query": [
																		{
																			"key": "group",
																			"value": "anim dolore est voluptate irure"
																		},
																		{
																			"key": "group",
																			"value": "veniam"
																		},
																		{
																			"key": "user",
																			"value": "ut non"
																		}
																	],
																	"variable": [
																		{
																			"key": "attachmentId",
																			"value": "ut non",
																			"description": "(Required) "
																		},
																		{
																			"key": "taskId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "OK",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/usertasks/instance/:taskId/attachments/:attachmentId?group=sit eu&group=sint cupidatat irure proident&user=ut non",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"usertasks",
																				"instance",
																				":taskId",
																				"attachments",
																				":attachmentId"
																			],
																			"query": [
																				{
																					"key": "group",
																					"value": "sit eu"
																				},
																				{
																					"key": "group",
																					"value": "sint cupidatat irure proident"
																				},
																				{
																					"key": "user",
																					"value": "ut non"
																				}
																			],
																			"variable": [
																				{
																					"key": "attachmentId",
																					"value": "ut non",
																					"description": "(Required) "
																				},
																				{
																					"key": "taskId",
																					"value": "ut non",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"id\": \"eu\",\n  \"content\": \"https://lLUMCWviIqkxdJChVBsnODMkhADdT.tufgrCbrvJP5rcL4OnJsKNLg.3bJOZsQnloc+50Vp7a\",\n  \"updatedAt\": \"2022-03-10\",\n  \"updatedBy\": \"nulla amet eiusmod id anim\",\n  \"name\": \"ea Duis labore velit\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "/usertasks/instance/:taskId/attachments",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/usertasks/instance/:taskId/attachments?group=anim dolore est voluptate irure&group=veniam&user=ut non",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usertasks",
																"instance",
																":taskId",
																"attachments"
															],
															"query": [
																{
																	"key": "group",
																	"value": "anim dolore est voluptate irure"
																},
																{
																	"key": "group",
																	"value": "veniam"
																},
																{
																	"key": "user",
																	"value": "ut non"
																}
															],
															"variable": [
																{
																	"key": "taskId",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/usertasks/instance/:taskId/attachments?group=sit eu&group=sint cupidatat irure proident&user=ut non",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"usertasks",
																		"instance",
																		":taskId",
																		"attachments"
																	],
																	"query": [
																		{
																			"key": "group",
																			"value": "sit eu"
																		},
																		{
																			"key": "group",
																			"value": "sint cupidatat irure proident"
																		},
																		{
																			"key": "user",
																			"value": "ut non"
																		}
																	],
																	"variable": [
																		{
																			"key": "taskId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"id\": \"Duis velit quis eiusmod\",\n    \"content\": \"https://iuMnWKxJHcfsbM.mgRIOYtTSQfCl6TthKvtg.maDTl27t\",\n    \"updatedAt\": \"2022-03-10\",\n    \"updatedBy\": \"amet irure in dolore\",\n    \"name\": \"qui in do nostrud commodo\"\n  },\n  {\n    \"id\": \"esse occaecat cillum\",\n    \"content\": \"https://IznIkhswwftglHCyeaEeHYsH.ltgqLwbLP4Gd5v-xga-rNcVnmIDDgc7ixrJUT5B\",\n    \"updatedAt\": \"2022-03-10\",\n    \"updatedBy\": \"la\",\n    \"name\": \"laboris sint exercitation\"\n  }\n]"
														}
													]
												},
												{
													"name": "/usertasks/instance/:taskId/attachments",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"uri\": \"http://mEzKcfRAXooHIMUjxXfNKypdE.vqmbneztTa9ux8zVFNd-MMvg8bV1OJYQnLbOJY8AL5BFoMdZF,Q,9T17hEKWRR\",\n  \"name\": \"sed elit ex\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/usertasks/instance/:taskId/attachments?group=anim dolore est voluptate irure&group=veniam&user=ut non",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usertasks",
																"instance",
																":taskId",
																"attachments"
															],
															"query": [
																{
																	"key": "group",
																	"value": "anim dolore est voluptate irure"
																},
																{
																	"key": "group",
																	"value": "veniam"
																},
																{
																	"key": "user",
																	"value": "ut non"
																}
															],
															"variable": [
																{
																	"key": "taskId",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"uri\": \"http://mEzKcfRAXooHIMUjxXfNKypdE.vqmbneztTa9ux8zVFNd-MMvg8bV1OJYQnLbOJY8AL5BFoMdZF,Q,9T17hEKWRR\",\n  \"name\": \"sed elit ex\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/usertasks/instance/:taskId/attachments?group=sit eu&group=sint cupidatat irure proident&user=ut non",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"usertasks",
																		"instance",
																		":taskId",
																		"attachments"
																	],
																	"query": [
																		{
																			"key": "group",
																			"value": "sit eu"
																		},
																		{
																			"key": "group",
																			"value": "sint cupidatat irure proident"
																		},
																		{
																			"key": "user",
																			"value": "ut non"
																		}
																	],
																	"variable": [
																		{
																			"key": "taskId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"eu\",\n  \"content\": \"https://lLUMCWviIqkxdJChVBsnODMkhADdT.tufgrCbrvJP5rcL4OnJsKNLg.3bJOZsQnloc+50Vp7a\",\n  \"updatedAt\": \"2022-03-10\",\n  \"updatedBy\": \"nulla amet eiusmod id anim\",\n  \"name\": \"ea Duis labore velit\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "comments",
											"item": [
												{
													"name": "{commentId}",
													"item": [
														{
															"name": "/usertasks/instance/:taskId/comments/:commentId",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/usertasks/instance/:taskId/comments/:commentId?group=anim dolore est voluptate irure&group=veniam&user=ut non",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"usertasks",
																		"instance",
																		":taskId",
																		"comments",
																		":commentId"
																	],
																	"query": [
																		{
																			"key": "group",
																			"value": "anim dolore est voluptate irure"
																		},
																		{
																			"key": "group",
																			"value": "veniam"
																		},
																		{
																			"key": "user",
																			"value": "ut non"
																		}
																	],
																	"variable": [
																		{
																			"key": "commentId",
																			"value": "ut non",
																			"description": "(Required) "
																		},
																		{
																			"key": "taskId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "OK",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/usertasks/instance/:taskId/comments/:commentId?group=sit eu&group=sint cupidatat irure proident&user=ut non",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"usertasks",
																				"instance",
																				":taskId",
																				"comments",
																				":commentId"
																			],
																			"query": [
																				{
																					"key": "group",
																					"value": "sit eu"
																				},
																				{
																					"key": "group",
																					"value": "sint cupidatat irure proident"
																				},
																				{
																					"key": "user",
																					"value": "ut non"
																				}
																			],
																			"variable": [
																				{
																					"key": "commentId",
																					"value": "ut non",
																					"description": "(Required) "
																				},
																				{
																					"key": "taskId",
																					"value": "ut non",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"id\": \"aliquip\",\n  \"content\": \"amet ad\",\n  \"updatedAt\": \"2022-03-10\",\n  \"updatedBy\": \"elit officia ut\"\n}"
																}
															]
														},
														{
															"name": "/usertasks/instance/:taskId/comments/:commentId",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"comment\": \"dolore proident ex sit magna\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/usertasks/instance/:taskId/comments/:commentId?group=anim dolore est voluptate irure&group=veniam&user=ut non",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"usertasks",
																		"instance",
																		":taskId",
																		"comments",
																		":commentId"
																	],
																	"query": [
																		{
																			"key": "group",
																			"value": "anim dolore est voluptate irure"
																		},
																		{
																			"key": "group",
																			"value": "veniam"
																		},
																		{
																			"key": "user",
																			"value": "ut non"
																		}
																	],
																	"variable": [
																		{
																			"key": "commentId",
																			"value": "ut non",
																			"description": "(Required) "
																		},
																		{
																			"key": "taskId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "OK",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"comment\": \"dolore proident ex sit magna\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/usertasks/instance/:taskId/comments/:commentId?group=sit eu&group=sint cupidatat irure proident&user=ut non",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"usertasks",
																				"instance",
																				":taskId",
																				"comments",
																				":commentId"
																			],
																			"query": [
																				{
																					"key": "group",
																					"value": "sit eu"
																				},
																				{
																					"key": "group",
																					"value": "sint cupidatat irure proident"
																				},
																				{
																					"key": "user",
																					"value": "ut non"
																				}
																			],
																			"variable": [
																				{
																					"key": "commentId",
																					"value": "ut non",
																					"description": "(Required) "
																				},
																				{
																					"key": "taskId",
																					"value": "ut non",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"id\": \"aliquip\",\n  \"content\": \"amet ad\",\n  \"updatedAt\": \"2022-03-10\",\n  \"updatedBy\": \"elit officia ut\"\n}"
																}
															]
														},
														{
															"name": "/usertasks/instance/:taskId/comments/:commentId",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/usertasks/instance/:taskId/comments/:commentId?group=anim dolore est voluptate irure&group=veniam&user=ut non",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"usertasks",
																		"instance",
																		":taskId",
																		"comments",
																		":commentId"
																	],
																	"query": [
																		{
																			"key": "group",
																			"value": "anim dolore est voluptate irure"
																		},
																		{
																			"key": "group",
																			"value": "veniam"
																		},
																		{
																			"key": "user",
																			"value": "ut non"
																		}
																	],
																	"variable": [
																		{
																			"key": "commentId",
																			"value": "ut non",
																			"description": "(Required) "
																		},
																		{
																			"key": "taskId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "OK",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/usertasks/instance/:taskId/comments/:commentId?group=sit eu&group=sint cupidatat irure proident&user=ut non",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"usertasks",
																				"instance",
																				":taskId",
																				"comments",
																				":commentId"
																			],
																			"query": [
																				{
																					"key": "group",
																					"value": "sit eu"
																				},
																				{
																					"key": "group",
																					"value": "sint cupidatat irure proident"
																				},
																				{
																					"key": "user",
																					"value": "ut non"
																				}
																			],
																			"variable": [
																				{
																					"key": "commentId",
																					"value": "ut non",
																					"description": "(Required) "
																				},
																				{
																					"key": "taskId",
																					"value": "ut non",
																					"description": "(Required) "
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"id\": \"aliquip\",\n  \"content\": \"amet ad\",\n  \"updatedAt\": \"2022-03-10\",\n  \"updatedBy\": \"elit officia ut\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "/usertasks/instance/:taskId/comments",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/usertasks/instance/:taskId/comments?group=anim dolore est voluptate irure&group=veniam&user=ut non",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usertasks",
																"instance",
																":taskId",
																"comments"
															],
															"query": [
																{
																	"key": "group",
																	"value": "anim dolore est voluptate irure"
																},
																{
																	"key": "group",
																	"value": "veniam"
																},
																{
																	"key": "user",
																	"value": "ut non"
																}
															],
															"variable": [
																{
																	"key": "taskId",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/usertasks/instance/:taskId/comments?group=sit eu&group=sint cupidatat irure proident&user=ut non",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"usertasks",
																		"instance",
																		":taskId",
																		"comments"
																	],
																	"query": [
																		{
																			"key": "group",
																			"value": "sit eu"
																		},
																		{
																			"key": "group",
																			"value": "sint cupidatat irure proident"
																		},
																		{
																			"key": "user",
																			"value": "ut non"
																		}
																	],
																	"variable": [
																		{
																			"key": "taskId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"id\": \"enim laborum elit\",\n    \"content\": \"nulla qui velit\",\n    \"updatedAt\": \"2022-03-10\",\n    \"updatedBy\": \"proident velit\"\n  },\n  {\n    \"id\": \"laborum\",\n    \"content\": \"eiusmod Ut\",\n    \"updatedAt\": \"2022-03-10\",\n    \"updatedBy\": \"occaecat ea magna sunt\"\n  }\n]"
														}
													]
												},
												{
													"name": "/usertasks/instance/:taskId/comments",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"comment\": \"dolore proident ex sit magna\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/usertasks/instance/:taskId/comments?group=anim dolore est voluptate irure&group=veniam&user=ut non",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usertasks",
																"instance",
																":taskId",
																"comments"
															],
															"query": [
																{
																	"key": "group",
																	"value": "anim dolore est voluptate irure"
																},
																{
																	"key": "group",
																	"value": "veniam"
																},
																{
																	"key": "user",
																	"value": "ut non"
																}
															],
															"variable": [
																{
																	"key": "taskId",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"comment\": \"dolore proident ex sit magna\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/usertasks/instance/:taskId/comments?group=sit eu&group=sint cupidatat irure proident&user=ut non",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"usertasks",
																		"instance",
																		":taskId",
																		"comments"
																	],
																	"query": [
																		{
																			"key": "group",
																			"value": "sit eu"
																		},
																		{
																			"key": "group",
																			"value": "sint cupidatat irure proident"
																		},
																		{
																			"key": "user",
																			"value": "ut non"
																		}
																	],
																	"variable": [
																		{
																			"key": "taskId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"aliquip\",\n  \"content\": \"amet ad\",\n  \"updatedAt\": \"2022-03-10\",\n  \"updatedBy\": \"elit officia ut\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "transition",
											"item": [
												{
													"name": "/usertasks/instance/:taskId/transition",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/usertasks/instance/:taskId/transition?group=anim dolore est voluptate irure&group=veniam&user=ut non",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usertasks",
																"instance",
																":taskId",
																"transition"
															],
															"query": [
																{
																	"key": "group",
																	"value": "anim dolore est voluptate irure"
																},
																{
																	"key": "group",
																	"value": "veniam"
																},
																{
																	"key": "user",
																	"value": "ut non"
																}
															],
															"variable": [
																{
																	"key": "taskId",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/usertasks/instance/:taskId/transition?group=sit eu&group=sint cupidatat irure proident&user=ut non",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"usertasks",
																		"instance",
																		":taskId",
																		"transition"
																	],
																	"query": [
																		{
																			"key": "group",
																			"value": "sit eu"
																		},
																		{
																			"key": "group",
																			"value": "sint cupidatat irure proident"
																		},
																		{
																			"key": "user",
																			"value": "ut non"
																		}
																	],
																	"variable": [
																		{
																			"key": "taskId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"transitionId\": \"occaecat\",\n    \"source\": {\n      \"terminate\": \"EXITED\",\n      \"name\": \"minim ut sed\"\n    },\n    \"target\": {\n      \"terminate\": \"COMPLETED\",\n      \"name\": \"ullamco do\"\n    }\n  },\n  {\n    \"transitionId\": \"magna est aliqua\",\n    \"source\": {\n      \"terminate\": \"EXITED\",\n      \"name\": \"Duis nulla Lorem proident adipisicing\"\n    },\n    \"target\": {\n      \"terminate\": \"ERROR\",\n      \"name\": \"id nostrud ea proident\"\n    }\n  }\n]"
														}
													]
												},
												{
													"name": "/usertasks/instance/:taskId/transition",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"transitionId\": \"voluptate quis\",\n  \"data\": {\n    \"Lorem_c66\": {}\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/usertasks/instance/:taskId/transition?group=anim dolore est voluptate irure&group=veniam&user=ut non",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usertasks",
																"instance",
																":taskId",
																"transition"
															],
															"query": [
																{
																	"key": "group",
																	"value": "anim dolore est voluptate irure"
																},
																{
																	"key": "group",
																	"value": "veniam"
																},
																{
																	"key": "user",
																	"value": "ut non"
																}
															],
															"variable": [
																{
																	"key": "taskId",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"transitionId\": \"voluptate quis\",\n  \"data\": {\n    \"Lorem_c66\": {}\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/usertasks/instance/:taskId/transition?group=sit eu&group=sint cupidatat irure proident&user=ut non",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"usertasks",
																		"instance",
																		":taskId",
																		"transition"
																	],
																	"query": [
																		{
																			"key": "group",
																			"value": "sit eu"
																		},
																		{
																			"key": "group",
																			"value": "sint cupidatat irure proident"
																		},
																		{
																			"key": "user",
																			"value": "ut non"
																		}
																	],
																	"variable": [
																		{
																			"key": "taskId",
																			"value": "ut non",
																			"description": "(Required) "
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"minim consectetur sed esse dolor\",\n  \"userTaskId\": \"et sunt cillum sint\",\n  \"status\": {\n    \"terminate\": \"EXITED\",\n    \"name\": \"minim do aute\"\n  },\n  \"taskName\": \"laborum Lorem exercitation occaecat\",\n  \"taskDescription\": \"dolor occaecat\",\n  \"taskPriority\": \"ipsum irure deserunt\",\n  \"potentialUsers\": [\n    \"pariatur eu\",\n    \"id in est\"\n  ],\n  \"potentialGroups\": [\n    \"Excepteur reprehenderit\",\n    \"cillum irure nisi\"\n  ],\n  \"adminUsers\": [\n    \"deserunt velit exercitation in\",\n    \"qui\"\n  ],\n  \"adminGroups\": [\n    \"ea laborum\",\n    \"aliquip commodo\"\n  ],\n  \"excludedUsers\": [\n    \"\",\n    \"aliquip aliqua\"\n  ],\n  \"externalReferenceId\": \"ullamco irure\",\n  \"actualOwner\": \"incididunt in ullamco\",\n  \"inputs\": {\n    \"irure_3\": {},\n    \"Excepteur6d3\": {}\n  },\n  \"outputs\": {\n    \"incididunt_02\": {}\n  },\n  \"metadata\": {\n    \"anim1_\": {}\n  }\n}"
														}
													]
												}
											]
										},
										{
											"name": "/usertasks/instance/:taskId",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/usertasks/instance/:taskId?group=anim dolore est voluptate irure&group=veniam&user=ut non",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usertasks",
														"instance",
														":taskId"
													],
													"query": [
														{
															"key": "group",
															"value": "anim dolore est voluptate irure"
														},
														{
															"key": "group",
															"value": "veniam"
														},
														{
															"key": "user",
															"value": "ut non"
														}
													],
													"variable": [
														{
															"key": "taskId",
															"value": "ut non",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/usertasks/instance/:taskId?group=sit eu&group=sint cupidatat irure proident&user=ut non",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usertasks",
																"instance",
																":taskId"
															],
															"query": [
																{
																	"key": "group",
																	"value": "sit eu"
																},
																{
																	"key": "group",
																	"value": "sint cupidatat irure proident"
																},
																{
																	"key": "user",
																	"value": "ut non"
																}
															],
															"variable": [
																{
																	"key": "taskId",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"minim consectetur sed esse dolor\",\n  \"userTaskId\": \"et sunt cillum sint\",\n  \"status\": {\n    \"terminate\": \"EXITED\",\n    \"name\": \"minim do aute\"\n  },\n  \"taskName\": \"laborum Lorem exercitation occaecat\",\n  \"taskDescription\": \"dolor occaecat\",\n  \"taskPriority\": \"ipsum irure deserunt\",\n  \"potentialUsers\": [\n    \"pariatur eu\",\n    \"id in est\"\n  ],\n  \"potentialGroups\": [\n    \"Excepteur reprehenderit\",\n    \"cillum irure nisi\"\n  ],\n  \"adminUsers\": [\n    \"deserunt velit exercitation in\",\n    \"qui\"\n  ],\n  \"adminGroups\": [\n    \"ea laborum\",\n    \"aliquip commodo\"\n  ],\n  \"excludedUsers\": [\n    \"\",\n    \"aliquip aliqua\"\n  ],\n  \"externalReferenceId\": \"ullamco irure\",\n  \"actualOwner\": \"incididunt in ullamco\",\n  \"inputs\": {\n    \"irure_3\": {},\n    \"Excepteur6d3\": {}\n  },\n  \"outputs\": {\n    \"incididunt_02\": {}\n  },\n  \"metadata\": {\n    \"anim1_\": {}\n  }\n}"
												}
											]
										},
										{
											"name": "/usertasks/instance/:taskId/inputs",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "ut non",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usertasks/instance/:taskId/inputs?group=anim dolore est voluptate irure&group=veniam&user=ut non",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usertasks",
														"instance",
														":taskId",
														"inputs"
													],
													"query": [
														{
															"key": "group",
															"value": "anim dolore est voluptate irure"
														},
														{
															"key": "group",
															"value": "veniam"
														},
														{
															"key": "user",
															"value": "ut non"
														}
													],
													"variable": [
														{
															"key": "taskId",
															"value": "ut non",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "ut non",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/usertasks/instance/:taskId/inputs?group=sit eu&group=sint cupidatat irure proident&user=ut non",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usertasks",
																"instance",
																":taskId",
																"inputs"
															],
															"query": [
																{
																	"key": "group",
																	"value": "sit eu"
																},
																{
																	"key": "group",
																	"value": "sint cupidatat irure proident"
																},
																{
																	"key": "user",
																	"value": "ut non"
																}
															],
															"variable": [
																{
																	"key": "taskId",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"minim consectetur sed esse dolor\",\n  \"userTaskId\": \"et sunt cillum sint\",\n  \"status\": {\n    \"terminate\": \"EXITED\",\n    \"name\": \"minim do aute\"\n  },\n  \"taskName\": \"laborum Lorem exercitation occaecat\",\n  \"taskDescription\": \"dolor occaecat\",\n  \"taskPriority\": \"ipsum irure deserunt\",\n  \"potentialUsers\": [\n    \"pariatur eu\",\n    \"id in est\"\n  ],\n  \"potentialGroups\": [\n    \"Excepteur reprehenderit\",\n    \"cillum irure nisi\"\n  ],\n  \"adminUsers\": [\n    \"deserunt velit exercitation in\",\n    \"qui\"\n  ],\n  \"adminGroups\": [\n    \"ea laborum\",\n    \"aliquip commodo\"\n  ],\n  \"excludedUsers\": [\n    \"\",\n    \"aliquip aliqua\"\n  ],\n  \"externalReferenceId\": \"ullamco irure\",\n  \"actualOwner\": \"incididunt in ullamco\",\n  \"inputs\": {\n    \"irure_3\": {},\n    \"Excepteur6d3\": {}\n  },\n  \"outputs\": {\n    \"incididunt_02\": {}\n  },\n  \"metadata\": {\n    \"anim1_\": {}\n  }\n}"
												}
											]
										},
										{
											"name": "/usertasks/instance/:taskId/outputs",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "ut non",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/usertasks/instance/:taskId/outputs?group=anim dolore est voluptate irure&group=veniam&user=ut non",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usertasks",
														"instance",
														":taskId",
														"outputs"
													],
													"query": [
														{
															"key": "group",
															"value": "anim dolore est voluptate irure"
														},
														{
															"key": "group",
															"value": "veniam"
														},
														{
															"key": "user",
															"value": "ut non"
														}
													],
													"variable": [
														{
															"key": "taskId",
															"value": "ut non",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "ut non",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/usertasks/instance/:taskId/outputs?group=sit eu&group=sint cupidatat irure proident&user=ut non",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"usertasks",
																"instance",
																":taskId",
																"outputs"
															],
															"query": [
																{
																	"key": "group",
																	"value": "sit eu"
																},
																{
																	"key": "group",
																	"value": "sint cupidatat irure proident"
																},
																{
																	"key": "user",
																	"value": "ut non"
																}
															],
															"variable": [
																{
																	"key": "taskId",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"minim consectetur sed esse dolor\",\n  \"userTaskId\": \"et sunt cillum sint\",\n  \"status\": {\n    \"terminate\": \"EXITED\",\n    \"name\": \"minim do aute\"\n  },\n  \"taskName\": \"laborum Lorem exercitation occaecat\",\n  \"taskDescription\": \"dolor occaecat\",\n  \"taskPriority\": \"ipsum irure deserunt\",\n  \"potentialUsers\": [\n    \"pariatur eu\",\n    \"id in est\"\n  ],\n  \"potentialGroups\": [\n    \"Excepteur reprehenderit\",\n    \"cillum irure nisi\"\n  ],\n  \"adminUsers\": [\n    \"deserunt velit exercitation in\",\n    \"qui\"\n  ],\n  \"adminGroups\": [\n    \"ea laborum\",\n    \"aliquip commodo\"\n  ],\n  \"excludedUsers\": [\n    \"\",\n    \"aliquip aliqua\"\n  ],\n  \"externalReferenceId\": \"ullamco irure\",\n  \"actualOwner\": \"incididunt in ullamco\",\n  \"inputs\": {\n    \"irure_3\": {},\n    \"Excepteur6d3\": {}\n  },\n  \"outputs\": {\n    \"incididunt_02\": {}\n  },\n  \"metadata\": {\n    \"anim1_\": {}\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "/usertasks/instance",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/usertasks/instance?group=anim dolore est voluptate irure&group=veniam&user=ut non",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"usertasks",
												"instance"
											],
											"query": [
												{
													"key": "group",
													"value": "anim dolore est voluptate irure"
												},
												{
													"key": "group",
													"value": "veniam"
												},
												{
													"key": "user",
													"value": "ut non"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/usertasks/instance?group=sit eu&group=sint cupidatat irure proident&user=ut non",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"usertasks",
														"instance"
													],
													"query": [
														{
															"key": "group",
															"value": "sit eu"
														},
														{
															"key": "group",
															"value": "sint cupidatat irure proident"
														},
														{
															"key": "user",
															"value": "ut non"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"nulla dolor officia tempor\",\n    \"userTaskId\": \"in esse deserunt\",\n    \"status\": {\n      \"terminate\": \"FAILED\",\n      \"name\": \"ut aliqua elit consectetur in\"\n    },\n    \"taskName\": \"reprehenderit ex eu ut nostrud\",\n    \"taskDescription\": \"ea in ullamco officia enim\",\n    \"taskPriority\": \"aliquip est aute minim incididunt\",\n    \"potentialUsers\": [\n      \"ut aliquip\",\n      \"ad\"\n    ],\n    \"potentialGroups\": [\n      \"Duis id aute Ut\",\n      \"in sit tempor\"\n    ],\n    \"adminUsers\": [\n      \"est\",\n      \"tempor aliquip\"\n    ],\n    \"adminGroups\": [\n      \"dolore consequat irure anim\",\n      \"aute dolore\"\n    ],\n    \"excludedUsers\": [\n      \"in dolore ipsum\",\n      \"est esse amet\"\n    ],\n    \"externalReferenceId\": \"aliquip proident laborum deserunt\",\n    \"actualOwner\": \"nisi velit\",\n    \"inputs\": {\n      \"cillum_48\": {},\n      \"dolore_5\": {}\n    },\n    \"outputs\": {\n      \"aliqua8ff\": {},\n      \"enim_5\": {}\n    },\n    \"metadata\": {\n      \"anim_ab\": {}\n    }\n  },\n  {\n    \"id\": \"Ut sunt et\",\n    \"userTaskId\": \"ipsum sunt anim\",\n    \"status\": {\n      \"terminate\": \"FAILED\",\n      \"name\": \"in dolore ea voluptate\"\n    },\n    \"taskName\": \"in Lorem voluptate\",\n    \"taskDescription\": \"in labore \",\n    \"taskPriority\": \"ut irure\",\n    \"potentialUsers\": [\n      \"ipsum in\",\n      \"laboris mollit\"\n    ],\n    \"potentialGroups\": [\n      \"sit qui non\",\n      \"eu Lorem dolore\"\n    ],\n    \"adminUsers\": [\n      \"aute\",\n      \"sint in labore tempor\"\n    ],\n    \"adminGroups\": [\n      \"in aliqua sit\",\n      \"officia aute in sint veniam\"\n    ],\n    \"excludedUsers\": [\n      \"irure anim culpa\",\n      \"non culpa\"\n    ],\n    \"externalReferenceId\": \"exercitatio\",\n    \"actualOwner\": \"velit commodo est eu\",\n    \"inputs\": {\n      \"in_07\": {}\n    },\n    \"outputs\": {\n      \"occaecat_345\": {}\n    },\n    \"metadata\": {\n      \"esse3d\": {}\n    }\n  }\n]"
										}
									]
								}
							]
						},
						{
							"name": "v2/jobs",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "get Job V2",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/jobs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"jobs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "{{job-id}}",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v2/jobs/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"jobs",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"schedule\": {\n    \"type\": \"tempor minim consectetur\"\n  },\n  \"retry\": {\n    \"maxRetries\": 3,\n    \"delay\": 0,\n    \"delayUnit\": \"HOURS\",\n    \"maxDuration\": 180000,\n    \"durationUnit\": \"MINUTES\"\n  },\n  \"recipient\": {\n    \"type\": \"culpa dolor dolore\"\n  },\n  \"id\": \"culpa ex ullamco elit\",\n  \"correlationId\": \"aliqua non dolore Excepteur consequat\",\n  \"state\": \"SCHEDULED\",\n  \"executionTimeout\": 29632246,\n  \"executionTimeoutUnit\": \"MILLIS\"\n}"
												}
											]
										},
										{
											"name": "delete Job V2",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/jobs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"jobs",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "ut non",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v2/jobs/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"jobs",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "ut non",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"schedule\": {\n    \"type\": \"tempor minim consectetur\"\n  },\n  \"retry\": {\n    \"maxRetries\": 3,\n    \"delay\": 0,\n    \"delayUnit\": \"HOURS\",\n    \"maxDuration\": 180000,\n    \"durationUnit\": \"MINUTES\"\n  },\n  \"recipient\": {\n    \"type\": \"culpa dolor dolore\"\n  },\n  \"id\": \"culpa ex ullamco elit\",\n  \"correlationId\": \"aliqua non dolore Excepteur consequat\",\n  \"state\": \"SCHEDULED\",\n  \"executionTimeout\": 29632246,\n  \"executionTimeoutUnit\": \"MILLIS\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "create Job V2",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"schedule\": {\n    \"type\": \"tempor minim consectetur\"\n  },\n  \"retry\": {\n    \"maxRetries\": 3,\n    \"delay\": 0,\n    \"delayUnit\": \"HOURS\",\n    \"maxDuration\": 180000,\n    \"durationUnit\": \"MINUTES\"\n  },\n  \"recipient\": {\n    \"type\": \"culpa dolor dolore\"\n  },\n  \"id\": \"culpa ex ullamco elit\",\n  \"correlationId\": \"aliqua non dolore Excepteur consequat\",\n  \"state\": \"SCHEDULED\",\n  \"executionTimeout\": 29632246,\n  \"executionTimeoutUnit\": \"MILLIS\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/jobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"jobs"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"schedule\": {\n    \"type\": \"tempor minim consectetur\"\n  },\n  \"retry\": {\n    \"maxRetries\": 3,\n    \"delay\": 0,\n    \"delayUnit\": \"HOURS\",\n    \"maxDuration\": 180000,\n    \"durationUnit\": \"MINUTES\"\n  },\n  \"recipient\": {\n    \"type\": \"culpa dolor dolore\"\n  },\n  \"id\": \"culpa ex ullamco elit\",\n  \"correlationId\": \"aliqua non dolore Excepteur consequat\",\n  \"state\": \"SCHEDULED\",\n  \"executionTimeout\": 29632246,\n  \"executionTimeoutUnit\": \"MILLIS\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/jobs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"jobs"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"schedule\": {\n    \"type\": \"tempor minim consectetur\"\n  },\n  \"retry\": {\n    \"maxRetries\": 3,\n    \"delay\": 0,\n    \"delayUnit\": \"HOURS\",\n    \"maxDuration\": 180000,\n    \"durationUnit\": \"MINUTES\"\n  },\n  \"recipient\": {\n    \"type\": \"culpa dolor dolore\"\n  },\n  \"id\": \"culpa ex ullamco elit\",\n  \"correlationId\": \"aliqua non dolore Excepteur consequat\",\n  \"state\": \"SCHEDULED\",\n  \"executionTimeout\": 29632246,\n  \"executionTimeoutUnit\": \"MILLIS\"\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Elasticsearch",
			"item": [
				{
					"name": "List indices",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9200/_cat/indices/*kogito*",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9200",
							"path": [
								"_cat",
								"indices",
								"*kogito*"
							]
						}
					},
					"response": []
				},
				{
					"name": "Query index by fields",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"sort\": [\r\n        {\r\n            \"@timestamp\": {\r\n                \"order\": \"desc\",\r\n                \"format\": \"strict_date_optional_time_nanos\"\r\n            }\r\n        }\r\n    ],\r\n    \"query\": {\r\n        \"bool\": {\r\n            \"must\": [\r\n                {\r\n                    \"match\": {\r\n                        \"type\": \"counter\"\r\n                    }\r\n                },\r\n                {\r\n                    \"match\": {\r\n                        \"name\": \"kogito_process_instance_completed_total\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9200/kogito-bpmn-processes-kafka-messages/_search",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9200",
							"path": [
								"kogito-bpmn-processes-kafka-messages",
								"_search"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "OpenTelemetry",
			"item": [
				{
					"name": "Get Metrics Prometheus",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/plain",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{kogito-service-host}}:{{kogito-service-port}}/q/metrics/prometheus",
							"host": [
								"{{kogito-service-host}}"
							],
							"port": "{{kogito-service-port}}",
							"path": [
								"q",
								"metrics",
								"prometheus"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Metrics Json",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{kogito-service-host}}:{{kogito-service-port}}/q/metrics/json",
							"host": [
								"{{kogito-service-host}}"
							],
							"port": "{{kogito-service-port}}",
							"path": [
								"q",
								"metrics",
								"json"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "kogito-service-host",
			"value": "http://localhost",
			"type": "string"
		},
		{
			"key": "kogito-service-port",
			"value": "8080",
			"type": "string"
		},
		{
			"key": "kogito-service-process-id",
			"value": "ServiceTaskProcess",
			"type": "string"
		},
		{
			"key": "kogito-data-index-host",
			"value": "http://localhost",
			"type": "string"
		},
		{
			"key": "kogito-data-index-port",
			"value": "8080",
			"type": "string"
		},
		{
			"key": "process-instance-id",
			"value": "209fe80f-f9fe-483d-8ae8-9d9e553314a4",
			"type": "string"
		},
		{
			"key": "task-instance-id",
			"value": "836bfe21-0a0f-44de-88db-afdc17f4b5d5",
			"type": "string"
		},
		{
			"key": "task-instance-name",
			"value": "validateCities",
			"type": "string"
		},
		{
			"key": "user-id",
			"value": "jdoe",
			"type": "string"
		},
		{
			"key": "query-get-all-process-instances",
			"value": "{ProcessInstances{id,processId,processName,state,parentProcessInstanceId,rootProcessId,rootProcessInstanceId,nodes{id,name,type}}}",
			"type": "string"
		},
		{
			"key": "query-get-process-instance-by-process-id",
			"value": "{ProcessInstances(where:{processId:{equal:\"kogito-service-process-id\"}},orderBy:{start:ASC}){id,processId,processName,start,end,state}}",
			"type": "string"
		},
		{
			"key": "query-get-process-instance-by-instance-id",
			"value": "{ProcessInstances(where:{id:{equal:\"process-instance-id\"}},orderBy:{start:ASC}){id,processId,processName,start,end,state}}",
			"type": "string"
		},
		{
			"key": "query-get-user-tasks-by-process-id",
			"value": "{UserTaskInstances(where:{processId:{equal:\"kogito-service-process-id\"}}){id,name,state,actualOwner,potentialUsers,description,priority,processId,processInstanceId,inputs,outputs}}",
			"type": "string"
		},
		{
			"key": "query-get-user-tasks-by-process-instance-id",
			"value": "{UserTaskInstances(where:{processInstanceId:{equal:\"process-instance-id\"}},orderBy:{lastUpdate:DESC}){id,name,state,actualOwner,potentialUsers,description,lastUpdate,priority,processId,processInstanceId,endpoint,inputs,outputs}}",
			"type": "string"
		},
		{
			"key": "query-get-active-user-tasks-by-process-instance-id",
			"value": "{UserTaskInstances(where:{processInstanceId:{equal:\"process-instance-id\"},{state:{equal:\"ACTIVE\"}}}){id,name,state,actualOwner,potentialUsers,description,priority,processId,processInstanceId,inputs,outputs}}",
			"type": "string"
		},
		{
			"key": "query-describe-entity",
			"value": "{__type(where: {name:\"entity\"}){namefields{nametype{namekind}}}}",
			"type": "string"
		},
		{
			"key": "query-describe-schema",
			"value": "{schema{types{name}}}",
			"type": "string"
		},
		{
			"key": "query-get-process-instances-by-process-id-and-date",
			"value": "{ProcessInstances(where:{and:{processId:{equal:\"kogito-service-process-id\"},start :{greaterThan: \"2024-10-02T17:00\"},state:{equal:ACTIVE}}},orderBy:{start:ASC}){id,processId,processName,start,end,state}}",
			"type": "string"
		}
	]
}